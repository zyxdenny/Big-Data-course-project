/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package song.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class songs extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6373025942728863080L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"songs\",\"namespace\":\"song.avro\",\"fields\":[{\"name\":\"analysis_sample_rate\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\",\"default\":[]}]},{\"name\":\"audio_md5\",\"type\":{\"type\":\"array\",\"items\":\"string\",\"default\":[]}},{\"name\":\"danceability\",\"type\":{\"type\":\"array\",\"items\":\"double\",\"default\":[]}},{\"name\":\"duration\",\"type\":{\"type\":\"array\",\"items\":\"double\",\"default\":[]}},{\"name\":\"end_of_fade_in\",\"type\":{\"type\":\"array\",\"items\":\"double\",\"default\":[]}},{\"name\":\"energy\",\"type\":{\"type\":\"array\",\"items\":\"double\",\"default\":[]}},{\"name\":\"idx_bars_confidence\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\",\"default\":[]}]},{\"name\":\"idx_bars_start\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\",\"default\":[]}]},{\"name\":\"idx_beats_confidence\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\",\"default\":[]}]},{\"name\":\"idx_beats_start\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\",\"default\":[]}]},{\"name\":\"idx_sections_confidence\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\",\"default\":[]}]},{\"name\":\"idx_sections_start\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\",\"default\":[]}]},{\"name\":\"idx_segments_confidence\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\",\"default\":[]}]},{\"name\":\"idx_segments_loudness_max\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\",\"default\":[]}]},{\"name\":\"idx_segments_loudness_max_time\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\",\"default\":[]}]},{\"name\":\"idx_segments_loudness_start\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\",\"default\":[]}]},{\"name\":\"idx_segments_pitches\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\",\"default\":[]}]},{\"name\":\"idx_segments_start\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\",\"default\":[]}]},{\"name\":\"idx_segments_timbre\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\",\"default\":[]}]},{\"name\":\"idx_tatums_confidence\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\",\"default\":[]}]},{\"name\":\"idx_tatums_start\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\",\"default\":[]}]},{\"name\":\"key\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\",\"default\":[]}]},{\"name\":\"key_confidence\",\"type\":{\"type\":\"array\",\"items\":\"double\",\"default\":[]}},{\"name\":\"loudness\",\"type\":{\"type\":\"array\",\"items\":\"double\",\"default\":[]}},{\"name\":\"mode\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"int\",\"default\":[]}]},{\"name\":\"mode_confidence\",\"type\":{\"type\":\"array\",\"items\":\"double\",\"default\":[]}},{\"name\":\"start_of_fade_out\",\"type\":{\"type\":\"array\",\"items\":\"double\",\"default\":[]}},{\"name\":\"tempo\",\"type\":{\"type\":\"array\",\"items\":\"double\",\"default\":[]}},{\"name\":\"time_signature\",\"type\":{\"type\":\"array\",\"items\":\"int\",\"default\":[]}},{\"name\":\"time_signature_confidence\",\"type\":{\"type\":\"array\",\"items\":\"double\",\"default\":[]}},{\"name\":\"track_id\",\"type\":{\"type\":\"array\",\"items\":\"string\",\"default\":[]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<songs> ENCODER =
      new BinaryMessageEncoder<songs>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<songs> DECODER =
      new BinaryMessageDecoder<songs>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<songs> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<songs> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<songs> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<songs>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this songs to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a songs from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a songs instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static songs fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.util.List<java.lang.Integer> analysis_sample_rate;
   private java.util.List<java.lang.CharSequence> audio_md5;
   private java.util.List<java.lang.Double> danceability;
   private java.util.List<java.lang.Double> duration;
   private java.util.List<java.lang.Double> end_of_fade_in;
   private java.util.List<java.lang.Double> energy;
   private java.util.List<java.lang.Integer> idx_bars_confidence;
   private java.util.List<java.lang.Integer> idx_bars_start;
   private java.util.List<java.lang.Integer> idx_beats_confidence;
   private java.util.List<java.lang.Integer> idx_beats_start;
   private java.util.List<java.lang.Integer> idx_sections_confidence;
   private java.util.List<java.lang.Integer> idx_sections_start;
   private java.util.List<java.lang.Integer> idx_segments_confidence;
   private java.util.List<java.lang.Integer> idx_segments_loudness_max;
   private java.util.List<java.lang.Integer> idx_segments_loudness_max_time;
   private java.util.List<java.lang.Integer> idx_segments_loudness_start;
   private java.util.List<java.lang.Integer> idx_segments_pitches;
   private java.util.List<java.lang.Integer> idx_segments_start;
   private java.util.List<java.lang.Integer> idx_segments_timbre;
   private java.util.List<java.lang.Integer> idx_tatums_confidence;
   private java.util.List<java.lang.Integer> idx_tatums_start;
   private java.util.List<java.lang.Integer> key;
   private java.util.List<java.lang.Double> key_confidence;
   private java.util.List<java.lang.Double> loudness;
   private java.util.List<java.lang.Integer> mode;
   private java.util.List<java.lang.Double> mode_confidence;
   private java.util.List<java.lang.Double> start_of_fade_out;
   private java.util.List<java.lang.Double> tempo;
   private java.util.List<java.lang.Integer> time_signature;
   private java.util.List<java.lang.Double> time_signature_confidence;
   private java.util.List<java.lang.CharSequence> track_id;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public songs() {}

  /**
   * All-args constructor.
   * @param analysis_sample_rate The new value for analysis_sample_rate
   * @param audio_md5 The new value for audio_md5
   * @param danceability The new value for danceability
   * @param duration The new value for duration
   * @param end_of_fade_in The new value for end_of_fade_in
   * @param energy The new value for energy
   * @param idx_bars_confidence The new value for idx_bars_confidence
   * @param idx_bars_start The new value for idx_bars_start
   * @param idx_beats_confidence The new value for idx_beats_confidence
   * @param idx_beats_start The new value for idx_beats_start
   * @param idx_sections_confidence The new value for idx_sections_confidence
   * @param idx_sections_start The new value for idx_sections_start
   * @param idx_segments_confidence The new value for idx_segments_confidence
   * @param idx_segments_loudness_max The new value for idx_segments_loudness_max
   * @param idx_segments_loudness_max_time The new value for idx_segments_loudness_max_time
   * @param idx_segments_loudness_start The new value for idx_segments_loudness_start
   * @param idx_segments_pitches The new value for idx_segments_pitches
   * @param idx_segments_start The new value for idx_segments_start
   * @param idx_segments_timbre The new value for idx_segments_timbre
   * @param idx_tatums_confidence The new value for idx_tatums_confidence
   * @param idx_tatums_start The new value for idx_tatums_start
   * @param key The new value for key
   * @param key_confidence The new value for key_confidence
   * @param loudness The new value for loudness
   * @param mode The new value for mode
   * @param mode_confidence The new value for mode_confidence
   * @param start_of_fade_out The new value for start_of_fade_out
   * @param tempo The new value for tempo
   * @param time_signature The new value for time_signature
   * @param time_signature_confidence The new value for time_signature_confidence
   * @param track_id The new value for track_id
   */
  public songs(java.util.List<java.lang.Integer> analysis_sample_rate, java.util.List<java.lang.CharSequence> audio_md5, java.util.List<java.lang.Double> danceability, java.util.List<java.lang.Double> duration, java.util.List<java.lang.Double> end_of_fade_in, java.util.List<java.lang.Double> energy, java.util.List<java.lang.Integer> idx_bars_confidence, java.util.List<java.lang.Integer> idx_bars_start, java.util.List<java.lang.Integer> idx_beats_confidence, java.util.List<java.lang.Integer> idx_beats_start, java.util.List<java.lang.Integer> idx_sections_confidence, java.util.List<java.lang.Integer> idx_sections_start, java.util.List<java.lang.Integer> idx_segments_confidence, java.util.List<java.lang.Integer> idx_segments_loudness_max, java.util.List<java.lang.Integer> idx_segments_loudness_max_time, java.util.List<java.lang.Integer> idx_segments_loudness_start, java.util.List<java.lang.Integer> idx_segments_pitches, java.util.List<java.lang.Integer> idx_segments_start, java.util.List<java.lang.Integer> idx_segments_timbre, java.util.List<java.lang.Integer> idx_tatums_confidence, java.util.List<java.lang.Integer> idx_tatums_start, java.util.List<java.lang.Integer> key, java.util.List<java.lang.Double> key_confidence, java.util.List<java.lang.Double> loudness, java.util.List<java.lang.Integer> mode, java.util.List<java.lang.Double> mode_confidence, java.util.List<java.lang.Double> start_of_fade_out, java.util.List<java.lang.Double> tempo, java.util.List<java.lang.Integer> time_signature, java.util.List<java.lang.Double> time_signature_confidence, java.util.List<java.lang.CharSequence> track_id) {
    this.analysis_sample_rate = analysis_sample_rate;
    this.audio_md5 = audio_md5;
    this.danceability = danceability;
    this.duration = duration;
    this.end_of_fade_in = end_of_fade_in;
    this.energy = energy;
    this.idx_bars_confidence = idx_bars_confidence;
    this.idx_bars_start = idx_bars_start;
    this.idx_beats_confidence = idx_beats_confidence;
    this.idx_beats_start = idx_beats_start;
    this.idx_sections_confidence = idx_sections_confidence;
    this.idx_sections_start = idx_sections_start;
    this.idx_segments_confidence = idx_segments_confidence;
    this.idx_segments_loudness_max = idx_segments_loudness_max;
    this.idx_segments_loudness_max_time = idx_segments_loudness_max_time;
    this.idx_segments_loudness_start = idx_segments_loudness_start;
    this.idx_segments_pitches = idx_segments_pitches;
    this.idx_segments_start = idx_segments_start;
    this.idx_segments_timbre = idx_segments_timbre;
    this.idx_tatums_confidence = idx_tatums_confidence;
    this.idx_tatums_start = idx_tatums_start;
    this.key = key;
    this.key_confidence = key_confidence;
    this.loudness = loudness;
    this.mode = mode;
    this.mode_confidence = mode_confidence;
    this.start_of_fade_out = start_of_fade_out;
    this.tempo = tempo;
    this.time_signature = time_signature;
    this.time_signature_confidence = time_signature_confidence;
    this.track_id = track_id;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return analysis_sample_rate;
    case 1: return audio_md5;
    case 2: return danceability;
    case 3: return duration;
    case 4: return end_of_fade_in;
    case 5: return energy;
    case 6: return idx_bars_confidence;
    case 7: return idx_bars_start;
    case 8: return idx_beats_confidence;
    case 9: return idx_beats_start;
    case 10: return idx_sections_confidence;
    case 11: return idx_sections_start;
    case 12: return idx_segments_confidence;
    case 13: return idx_segments_loudness_max;
    case 14: return idx_segments_loudness_max_time;
    case 15: return idx_segments_loudness_start;
    case 16: return idx_segments_pitches;
    case 17: return idx_segments_start;
    case 18: return idx_segments_timbre;
    case 19: return idx_tatums_confidence;
    case 20: return idx_tatums_start;
    case 21: return key;
    case 22: return key_confidence;
    case 23: return loudness;
    case 24: return mode;
    case 25: return mode_confidence;
    case 26: return start_of_fade_out;
    case 27: return tempo;
    case 28: return time_signature;
    case 29: return time_signature_confidence;
    case 30: return track_id;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: analysis_sample_rate = (java.util.List<java.lang.Integer>)value$; break;
    case 1: audio_md5 = (java.util.List<java.lang.CharSequence>)value$; break;
    case 2: danceability = (java.util.List<java.lang.Double>)value$; break;
    case 3: duration = (java.util.List<java.lang.Double>)value$; break;
    case 4: end_of_fade_in = (java.util.List<java.lang.Double>)value$; break;
    case 5: energy = (java.util.List<java.lang.Double>)value$; break;
    case 6: idx_bars_confidence = (java.util.List<java.lang.Integer>)value$; break;
    case 7: idx_bars_start = (java.util.List<java.lang.Integer>)value$; break;
    case 8: idx_beats_confidence = (java.util.List<java.lang.Integer>)value$; break;
    case 9: idx_beats_start = (java.util.List<java.lang.Integer>)value$; break;
    case 10: idx_sections_confidence = (java.util.List<java.lang.Integer>)value$; break;
    case 11: idx_sections_start = (java.util.List<java.lang.Integer>)value$; break;
    case 12: idx_segments_confidence = (java.util.List<java.lang.Integer>)value$; break;
    case 13: idx_segments_loudness_max = (java.util.List<java.lang.Integer>)value$; break;
    case 14: idx_segments_loudness_max_time = (java.util.List<java.lang.Integer>)value$; break;
    case 15: idx_segments_loudness_start = (java.util.List<java.lang.Integer>)value$; break;
    case 16: idx_segments_pitches = (java.util.List<java.lang.Integer>)value$; break;
    case 17: idx_segments_start = (java.util.List<java.lang.Integer>)value$; break;
    case 18: idx_segments_timbre = (java.util.List<java.lang.Integer>)value$; break;
    case 19: idx_tatums_confidence = (java.util.List<java.lang.Integer>)value$; break;
    case 20: idx_tatums_start = (java.util.List<java.lang.Integer>)value$; break;
    case 21: key = (java.util.List<java.lang.Integer>)value$; break;
    case 22: key_confidence = (java.util.List<java.lang.Double>)value$; break;
    case 23: loudness = (java.util.List<java.lang.Double>)value$; break;
    case 24: mode = (java.util.List<java.lang.Integer>)value$; break;
    case 25: mode_confidence = (java.util.List<java.lang.Double>)value$; break;
    case 26: start_of_fade_out = (java.util.List<java.lang.Double>)value$; break;
    case 27: tempo = (java.util.List<java.lang.Double>)value$; break;
    case 28: time_signature = (java.util.List<java.lang.Integer>)value$; break;
    case 29: time_signature_confidence = (java.util.List<java.lang.Double>)value$; break;
    case 30: track_id = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'analysis_sample_rate' field.
   * @return The value of the 'analysis_sample_rate' field.
   */
  public java.util.List<java.lang.Integer> getAnalysisSampleRate() {
    return analysis_sample_rate;
  }


  /**
   * Sets the value of the 'analysis_sample_rate' field.
   * @param value the value to set.
   */
  public void setAnalysisSampleRate(java.util.List<java.lang.Integer> value) {
    this.analysis_sample_rate = value;
  }

  /**
   * Gets the value of the 'audio_md5' field.
   * @return The value of the 'audio_md5' field.
   */
  public java.util.List<java.lang.CharSequence> getAudioMd5() {
    return audio_md5;
  }


  /**
   * Sets the value of the 'audio_md5' field.
   * @param value the value to set.
   */
  public void setAudioMd5(java.util.List<java.lang.CharSequence> value) {
    this.audio_md5 = value;
  }

  /**
   * Gets the value of the 'danceability' field.
   * @return The value of the 'danceability' field.
   */
  public java.util.List<java.lang.Double> getDanceability() {
    return danceability;
  }


  /**
   * Sets the value of the 'danceability' field.
   * @param value the value to set.
   */
  public void setDanceability(java.util.List<java.lang.Double> value) {
    this.danceability = value;
  }

  /**
   * Gets the value of the 'duration' field.
   * @return The value of the 'duration' field.
   */
  public java.util.List<java.lang.Double> getDuration() {
    return duration;
  }


  /**
   * Sets the value of the 'duration' field.
   * @param value the value to set.
   */
  public void setDuration(java.util.List<java.lang.Double> value) {
    this.duration = value;
  }

  /**
   * Gets the value of the 'end_of_fade_in' field.
   * @return The value of the 'end_of_fade_in' field.
   */
  public java.util.List<java.lang.Double> getEndOfFadeIn() {
    return end_of_fade_in;
  }


  /**
   * Sets the value of the 'end_of_fade_in' field.
   * @param value the value to set.
   */
  public void setEndOfFadeIn(java.util.List<java.lang.Double> value) {
    this.end_of_fade_in = value;
  }

  /**
   * Gets the value of the 'energy' field.
   * @return The value of the 'energy' field.
   */
  public java.util.List<java.lang.Double> getEnergy() {
    return energy;
  }


  /**
   * Sets the value of the 'energy' field.
   * @param value the value to set.
   */
  public void setEnergy(java.util.List<java.lang.Double> value) {
    this.energy = value;
  }

  /**
   * Gets the value of the 'idx_bars_confidence' field.
   * @return The value of the 'idx_bars_confidence' field.
   */
  public java.util.List<java.lang.Integer> getIdxBarsConfidence() {
    return idx_bars_confidence;
  }


  /**
   * Sets the value of the 'idx_bars_confidence' field.
   * @param value the value to set.
   */
  public void setIdxBarsConfidence(java.util.List<java.lang.Integer> value) {
    this.idx_bars_confidence = value;
  }

  /**
   * Gets the value of the 'idx_bars_start' field.
   * @return The value of the 'idx_bars_start' field.
   */
  public java.util.List<java.lang.Integer> getIdxBarsStart() {
    return idx_bars_start;
  }


  /**
   * Sets the value of the 'idx_bars_start' field.
   * @param value the value to set.
   */
  public void setIdxBarsStart(java.util.List<java.lang.Integer> value) {
    this.idx_bars_start = value;
  }

  /**
   * Gets the value of the 'idx_beats_confidence' field.
   * @return The value of the 'idx_beats_confidence' field.
   */
  public java.util.List<java.lang.Integer> getIdxBeatsConfidence() {
    return idx_beats_confidence;
  }


  /**
   * Sets the value of the 'idx_beats_confidence' field.
   * @param value the value to set.
   */
  public void setIdxBeatsConfidence(java.util.List<java.lang.Integer> value) {
    this.idx_beats_confidence = value;
  }

  /**
   * Gets the value of the 'idx_beats_start' field.
   * @return The value of the 'idx_beats_start' field.
   */
  public java.util.List<java.lang.Integer> getIdxBeatsStart() {
    return idx_beats_start;
  }


  /**
   * Sets the value of the 'idx_beats_start' field.
   * @param value the value to set.
   */
  public void setIdxBeatsStart(java.util.List<java.lang.Integer> value) {
    this.idx_beats_start = value;
  }

  /**
   * Gets the value of the 'idx_sections_confidence' field.
   * @return The value of the 'idx_sections_confidence' field.
   */
  public java.util.List<java.lang.Integer> getIdxSectionsConfidence() {
    return idx_sections_confidence;
  }


  /**
   * Sets the value of the 'idx_sections_confidence' field.
   * @param value the value to set.
   */
  public void setIdxSectionsConfidence(java.util.List<java.lang.Integer> value) {
    this.idx_sections_confidence = value;
  }

  /**
   * Gets the value of the 'idx_sections_start' field.
   * @return The value of the 'idx_sections_start' field.
   */
  public java.util.List<java.lang.Integer> getIdxSectionsStart() {
    return idx_sections_start;
  }


  /**
   * Sets the value of the 'idx_sections_start' field.
   * @param value the value to set.
   */
  public void setIdxSectionsStart(java.util.List<java.lang.Integer> value) {
    this.idx_sections_start = value;
  }

  /**
   * Gets the value of the 'idx_segments_confidence' field.
   * @return The value of the 'idx_segments_confidence' field.
   */
  public java.util.List<java.lang.Integer> getIdxSegmentsConfidence() {
    return idx_segments_confidence;
  }


  /**
   * Sets the value of the 'idx_segments_confidence' field.
   * @param value the value to set.
   */
  public void setIdxSegmentsConfidence(java.util.List<java.lang.Integer> value) {
    this.idx_segments_confidence = value;
  }

  /**
   * Gets the value of the 'idx_segments_loudness_max' field.
   * @return The value of the 'idx_segments_loudness_max' field.
   */
  public java.util.List<java.lang.Integer> getIdxSegmentsLoudnessMax() {
    return idx_segments_loudness_max;
  }


  /**
   * Sets the value of the 'idx_segments_loudness_max' field.
   * @param value the value to set.
   */
  public void setIdxSegmentsLoudnessMax(java.util.List<java.lang.Integer> value) {
    this.idx_segments_loudness_max = value;
  }

  /**
   * Gets the value of the 'idx_segments_loudness_max_time' field.
   * @return The value of the 'idx_segments_loudness_max_time' field.
   */
  public java.util.List<java.lang.Integer> getIdxSegmentsLoudnessMaxTime() {
    return idx_segments_loudness_max_time;
  }


  /**
   * Sets the value of the 'idx_segments_loudness_max_time' field.
   * @param value the value to set.
   */
  public void setIdxSegmentsLoudnessMaxTime(java.util.List<java.lang.Integer> value) {
    this.idx_segments_loudness_max_time = value;
  }

  /**
   * Gets the value of the 'idx_segments_loudness_start' field.
   * @return The value of the 'idx_segments_loudness_start' field.
   */
  public java.util.List<java.lang.Integer> getIdxSegmentsLoudnessStart() {
    return idx_segments_loudness_start;
  }


  /**
   * Sets the value of the 'idx_segments_loudness_start' field.
   * @param value the value to set.
   */
  public void setIdxSegmentsLoudnessStart(java.util.List<java.lang.Integer> value) {
    this.idx_segments_loudness_start = value;
  }

  /**
   * Gets the value of the 'idx_segments_pitches' field.
   * @return The value of the 'idx_segments_pitches' field.
   */
  public java.util.List<java.lang.Integer> getIdxSegmentsPitches() {
    return idx_segments_pitches;
  }


  /**
   * Sets the value of the 'idx_segments_pitches' field.
   * @param value the value to set.
   */
  public void setIdxSegmentsPitches(java.util.List<java.lang.Integer> value) {
    this.idx_segments_pitches = value;
  }

  /**
   * Gets the value of the 'idx_segments_start' field.
   * @return The value of the 'idx_segments_start' field.
   */
  public java.util.List<java.lang.Integer> getIdxSegmentsStart() {
    return idx_segments_start;
  }


  /**
   * Sets the value of the 'idx_segments_start' field.
   * @param value the value to set.
   */
  public void setIdxSegmentsStart(java.util.List<java.lang.Integer> value) {
    this.idx_segments_start = value;
  }

  /**
   * Gets the value of the 'idx_segments_timbre' field.
   * @return The value of the 'idx_segments_timbre' field.
   */
  public java.util.List<java.lang.Integer> getIdxSegmentsTimbre() {
    return idx_segments_timbre;
  }


  /**
   * Sets the value of the 'idx_segments_timbre' field.
   * @param value the value to set.
   */
  public void setIdxSegmentsTimbre(java.util.List<java.lang.Integer> value) {
    this.idx_segments_timbre = value;
  }

  /**
   * Gets the value of the 'idx_tatums_confidence' field.
   * @return The value of the 'idx_tatums_confidence' field.
   */
  public java.util.List<java.lang.Integer> getIdxTatumsConfidence() {
    return idx_tatums_confidence;
  }


  /**
   * Sets the value of the 'idx_tatums_confidence' field.
   * @param value the value to set.
   */
  public void setIdxTatumsConfidence(java.util.List<java.lang.Integer> value) {
    this.idx_tatums_confidence = value;
  }

  /**
   * Gets the value of the 'idx_tatums_start' field.
   * @return The value of the 'idx_tatums_start' field.
   */
  public java.util.List<java.lang.Integer> getIdxTatumsStart() {
    return idx_tatums_start;
  }


  /**
   * Sets the value of the 'idx_tatums_start' field.
   * @param value the value to set.
   */
  public void setIdxTatumsStart(java.util.List<java.lang.Integer> value) {
    this.idx_tatums_start = value;
  }

  /**
   * Gets the value of the 'key' field.
   * @return The value of the 'key' field.
   */
  public java.util.List<java.lang.Integer> getKey() {
    return key;
  }


  /**
   * Sets the value of the 'key' field.
   * @param value the value to set.
   */
  public void setKey(java.util.List<java.lang.Integer> value) {
    this.key = value;
  }

  /**
   * Gets the value of the 'key_confidence' field.
   * @return The value of the 'key_confidence' field.
   */
  public java.util.List<java.lang.Double> getKeyConfidence() {
    return key_confidence;
  }


  /**
   * Sets the value of the 'key_confidence' field.
   * @param value the value to set.
   */
  public void setKeyConfidence(java.util.List<java.lang.Double> value) {
    this.key_confidence = value;
  }

  /**
   * Gets the value of the 'loudness' field.
   * @return The value of the 'loudness' field.
   */
  public java.util.List<java.lang.Double> getLoudness() {
    return loudness;
  }


  /**
   * Sets the value of the 'loudness' field.
   * @param value the value to set.
   */
  public void setLoudness(java.util.List<java.lang.Double> value) {
    this.loudness = value;
  }

  /**
   * Gets the value of the 'mode' field.
   * @return The value of the 'mode' field.
   */
  public java.util.List<java.lang.Integer> getMode() {
    return mode;
  }


  /**
   * Sets the value of the 'mode' field.
   * @param value the value to set.
   */
  public void setMode(java.util.List<java.lang.Integer> value) {
    this.mode = value;
  }

  /**
   * Gets the value of the 'mode_confidence' field.
   * @return The value of the 'mode_confidence' field.
   */
  public java.util.List<java.lang.Double> getModeConfidence() {
    return mode_confidence;
  }


  /**
   * Sets the value of the 'mode_confidence' field.
   * @param value the value to set.
   */
  public void setModeConfidence(java.util.List<java.lang.Double> value) {
    this.mode_confidence = value;
  }

  /**
   * Gets the value of the 'start_of_fade_out' field.
   * @return The value of the 'start_of_fade_out' field.
   */
  public java.util.List<java.lang.Double> getStartOfFadeOut() {
    return start_of_fade_out;
  }


  /**
   * Sets the value of the 'start_of_fade_out' field.
   * @param value the value to set.
   */
  public void setStartOfFadeOut(java.util.List<java.lang.Double> value) {
    this.start_of_fade_out = value;
  }

  /**
   * Gets the value of the 'tempo' field.
   * @return The value of the 'tempo' field.
   */
  public java.util.List<java.lang.Double> getTempo() {
    return tempo;
  }


  /**
   * Sets the value of the 'tempo' field.
   * @param value the value to set.
   */
  public void setTempo(java.util.List<java.lang.Double> value) {
    this.tempo = value;
  }

  /**
   * Gets the value of the 'time_signature' field.
   * @return The value of the 'time_signature' field.
   */
  public java.util.List<java.lang.Integer> getTimeSignature() {
    return time_signature;
  }


  /**
   * Sets the value of the 'time_signature' field.
   * @param value the value to set.
   */
  public void setTimeSignature(java.util.List<java.lang.Integer> value) {
    this.time_signature = value;
  }

  /**
   * Gets the value of the 'time_signature_confidence' field.
   * @return The value of the 'time_signature_confidence' field.
   */
  public java.util.List<java.lang.Double> getTimeSignatureConfidence() {
    return time_signature_confidence;
  }


  /**
   * Sets the value of the 'time_signature_confidence' field.
   * @param value the value to set.
   */
  public void setTimeSignatureConfidence(java.util.List<java.lang.Double> value) {
    this.time_signature_confidence = value;
  }

  /**
   * Gets the value of the 'track_id' field.
   * @return The value of the 'track_id' field.
   */
  public java.util.List<java.lang.CharSequence> getTrackId() {
    return track_id;
  }


  /**
   * Sets the value of the 'track_id' field.
   * @param value the value to set.
   */
  public void setTrackId(java.util.List<java.lang.CharSequence> value) {
    this.track_id = value;
  }

  /**
   * Creates a new songs RecordBuilder.
   * @return A new songs RecordBuilder
   */
  public static song.avro.songs.Builder newBuilder() {
    return new song.avro.songs.Builder();
  }

  /**
   * Creates a new songs RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new songs RecordBuilder
   */
  public static song.avro.songs.Builder newBuilder(song.avro.songs.Builder other) {
    if (other == null) {
      return new song.avro.songs.Builder();
    } else {
      return new song.avro.songs.Builder(other);
    }
  }

  /**
   * Creates a new songs RecordBuilder by copying an existing songs instance.
   * @param other The existing instance to copy.
   * @return A new songs RecordBuilder
   */
  public static song.avro.songs.Builder newBuilder(song.avro.songs other) {
    if (other == null) {
      return new song.avro.songs.Builder();
    } else {
      return new song.avro.songs.Builder(other);
    }
  }

  /**
   * RecordBuilder for songs instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<songs>
    implements org.apache.avro.data.RecordBuilder<songs> {

    private java.util.List<java.lang.Integer> analysis_sample_rate;
    private java.util.List<java.lang.CharSequence> audio_md5;
    private java.util.List<java.lang.Double> danceability;
    private java.util.List<java.lang.Double> duration;
    private java.util.List<java.lang.Double> end_of_fade_in;
    private java.util.List<java.lang.Double> energy;
    private java.util.List<java.lang.Integer> idx_bars_confidence;
    private java.util.List<java.lang.Integer> idx_bars_start;
    private java.util.List<java.lang.Integer> idx_beats_confidence;
    private java.util.List<java.lang.Integer> idx_beats_start;
    private java.util.List<java.lang.Integer> idx_sections_confidence;
    private java.util.List<java.lang.Integer> idx_sections_start;
    private java.util.List<java.lang.Integer> idx_segments_confidence;
    private java.util.List<java.lang.Integer> idx_segments_loudness_max;
    private java.util.List<java.lang.Integer> idx_segments_loudness_max_time;
    private java.util.List<java.lang.Integer> idx_segments_loudness_start;
    private java.util.List<java.lang.Integer> idx_segments_pitches;
    private java.util.List<java.lang.Integer> idx_segments_start;
    private java.util.List<java.lang.Integer> idx_segments_timbre;
    private java.util.List<java.lang.Integer> idx_tatums_confidence;
    private java.util.List<java.lang.Integer> idx_tatums_start;
    private java.util.List<java.lang.Integer> key;
    private java.util.List<java.lang.Double> key_confidence;
    private java.util.List<java.lang.Double> loudness;
    private java.util.List<java.lang.Integer> mode;
    private java.util.List<java.lang.Double> mode_confidence;
    private java.util.List<java.lang.Double> start_of_fade_out;
    private java.util.List<java.lang.Double> tempo;
    private java.util.List<java.lang.Integer> time_signature;
    private java.util.List<java.lang.Double> time_signature_confidence;
    private java.util.List<java.lang.CharSequence> track_id;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(song.avro.songs.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.analysis_sample_rate)) {
        this.analysis_sample_rate = data().deepCopy(fields()[0].schema(), other.analysis_sample_rate);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.audio_md5)) {
        this.audio_md5 = data().deepCopy(fields()[1].schema(), other.audio_md5);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.danceability)) {
        this.danceability = data().deepCopy(fields()[2].schema(), other.danceability);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.duration)) {
        this.duration = data().deepCopy(fields()[3].schema(), other.duration);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.end_of_fade_in)) {
        this.end_of_fade_in = data().deepCopy(fields()[4].schema(), other.end_of_fade_in);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.energy)) {
        this.energy = data().deepCopy(fields()[5].schema(), other.energy);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.idx_bars_confidence)) {
        this.idx_bars_confidence = data().deepCopy(fields()[6].schema(), other.idx_bars_confidence);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.idx_bars_start)) {
        this.idx_bars_start = data().deepCopy(fields()[7].schema(), other.idx_bars_start);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.idx_beats_confidence)) {
        this.idx_beats_confidence = data().deepCopy(fields()[8].schema(), other.idx_beats_confidence);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.idx_beats_start)) {
        this.idx_beats_start = data().deepCopy(fields()[9].schema(), other.idx_beats_start);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.idx_sections_confidence)) {
        this.idx_sections_confidence = data().deepCopy(fields()[10].schema(), other.idx_sections_confidence);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.idx_sections_start)) {
        this.idx_sections_start = data().deepCopy(fields()[11].schema(), other.idx_sections_start);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.idx_segments_confidence)) {
        this.idx_segments_confidence = data().deepCopy(fields()[12].schema(), other.idx_segments_confidence);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.idx_segments_loudness_max)) {
        this.idx_segments_loudness_max = data().deepCopy(fields()[13].schema(), other.idx_segments_loudness_max);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.idx_segments_loudness_max_time)) {
        this.idx_segments_loudness_max_time = data().deepCopy(fields()[14].schema(), other.idx_segments_loudness_max_time);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.idx_segments_loudness_start)) {
        this.idx_segments_loudness_start = data().deepCopy(fields()[15].schema(), other.idx_segments_loudness_start);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.idx_segments_pitches)) {
        this.idx_segments_pitches = data().deepCopy(fields()[16].schema(), other.idx_segments_pitches);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.idx_segments_start)) {
        this.idx_segments_start = data().deepCopy(fields()[17].schema(), other.idx_segments_start);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.idx_segments_timbre)) {
        this.idx_segments_timbre = data().deepCopy(fields()[18].schema(), other.idx_segments_timbre);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.idx_tatums_confidence)) {
        this.idx_tatums_confidence = data().deepCopy(fields()[19].schema(), other.idx_tatums_confidence);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.idx_tatums_start)) {
        this.idx_tatums_start = data().deepCopy(fields()[20].schema(), other.idx_tatums_start);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.key)) {
        this.key = data().deepCopy(fields()[21].schema(), other.key);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.key_confidence)) {
        this.key_confidence = data().deepCopy(fields()[22].schema(), other.key_confidence);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.loudness)) {
        this.loudness = data().deepCopy(fields()[23].schema(), other.loudness);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.mode)) {
        this.mode = data().deepCopy(fields()[24].schema(), other.mode);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
      if (isValidValue(fields()[25], other.mode_confidence)) {
        this.mode_confidence = data().deepCopy(fields()[25].schema(), other.mode_confidence);
        fieldSetFlags()[25] = other.fieldSetFlags()[25];
      }
      if (isValidValue(fields()[26], other.start_of_fade_out)) {
        this.start_of_fade_out = data().deepCopy(fields()[26].schema(), other.start_of_fade_out);
        fieldSetFlags()[26] = other.fieldSetFlags()[26];
      }
      if (isValidValue(fields()[27], other.tempo)) {
        this.tempo = data().deepCopy(fields()[27].schema(), other.tempo);
        fieldSetFlags()[27] = other.fieldSetFlags()[27];
      }
      if (isValidValue(fields()[28], other.time_signature)) {
        this.time_signature = data().deepCopy(fields()[28].schema(), other.time_signature);
        fieldSetFlags()[28] = other.fieldSetFlags()[28];
      }
      if (isValidValue(fields()[29], other.time_signature_confidence)) {
        this.time_signature_confidence = data().deepCopy(fields()[29].schema(), other.time_signature_confidence);
        fieldSetFlags()[29] = other.fieldSetFlags()[29];
      }
      if (isValidValue(fields()[30], other.track_id)) {
        this.track_id = data().deepCopy(fields()[30].schema(), other.track_id);
        fieldSetFlags()[30] = other.fieldSetFlags()[30];
      }
    }

    /**
     * Creates a Builder by copying an existing songs instance
     * @param other The existing instance to copy.
     */
    private Builder(song.avro.songs other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.analysis_sample_rate)) {
        this.analysis_sample_rate = data().deepCopy(fields()[0].schema(), other.analysis_sample_rate);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.audio_md5)) {
        this.audio_md5 = data().deepCopy(fields()[1].schema(), other.audio_md5);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.danceability)) {
        this.danceability = data().deepCopy(fields()[2].schema(), other.danceability);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.duration)) {
        this.duration = data().deepCopy(fields()[3].schema(), other.duration);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.end_of_fade_in)) {
        this.end_of_fade_in = data().deepCopy(fields()[4].schema(), other.end_of_fade_in);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.energy)) {
        this.energy = data().deepCopy(fields()[5].schema(), other.energy);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.idx_bars_confidence)) {
        this.idx_bars_confidence = data().deepCopy(fields()[6].schema(), other.idx_bars_confidence);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.idx_bars_start)) {
        this.idx_bars_start = data().deepCopy(fields()[7].schema(), other.idx_bars_start);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.idx_beats_confidence)) {
        this.idx_beats_confidence = data().deepCopy(fields()[8].schema(), other.idx_beats_confidence);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.idx_beats_start)) {
        this.idx_beats_start = data().deepCopy(fields()[9].schema(), other.idx_beats_start);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.idx_sections_confidence)) {
        this.idx_sections_confidence = data().deepCopy(fields()[10].schema(), other.idx_sections_confidence);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.idx_sections_start)) {
        this.idx_sections_start = data().deepCopy(fields()[11].schema(), other.idx_sections_start);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.idx_segments_confidence)) {
        this.idx_segments_confidence = data().deepCopy(fields()[12].schema(), other.idx_segments_confidence);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.idx_segments_loudness_max)) {
        this.idx_segments_loudness_max = data().deepCopy(fields()[13].schema(), other.idx_segments_loudness_max);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.idx_segments_loudness_max_time)) {
        this.idx_segments_loudness_max_time = data().deepCopy(fields()[14].schema(), other.idx_segments_loudness_max_time);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.idx_segments_loudness_start)) {
        this.idx_segments_loudness_start = data().deepCopy(fields()[15].schema(), other.idx_segments_loudness_start);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.idx_segments_pitches)) {
        this.idx_segments_pitches = data().deepCopy(fields()[16].schema(), other.idx_segments_pitches);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.idx_segments_start)) {
        this.idx_segments_start = data().deepCopy(fields()[17].schema(), other.idx_segments_start);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.idx_segments_timbre)) {
        this.idx_segments_timbre = data().deepCopy(fields()[18].schema(), other.idx_segments_timbre);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.idx_tatums_confidence)) {
        this.idx_tatums_confidence = data().deepCopy(fields()[19].schema(), other.idx_tatums_confidence);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.idx_tatums_start)) {
        this.idx_tatums_start = data().deepCopy(fields()[20].schema(), other.idx_tatums_start);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.key)) {
        this.key = data().deepCopy(fields()[21].schema(), other.key);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.key_confidence)) {
        this.key_confidence = data().deepCopy(fields()[22].schema(), other.key_confidence);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.loudness)) {
        this.loudness = data().deepCopy(fields()[23].schema(), other.loudness);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.mode)) {
        this.mode = data().deepCopy(fields()[24].schema(), other.mode);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.mode_confidence)) {
        this.mode_confidence = data().deepCopy(fields()[25].schema(), other.mode_confidence);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.start_of_fade_out)) {
        this.start_of_fade_out = data().deepCopy(fields()[26].schema(), other.start_of_fade_out);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.tempo)) {
        this.tempo = data().deepCopy(fields()[27].schema(), other.tempo);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.time_signature)) {
        this.time_signature = data().deepCopy(fields()[28].schema(), other.time_signature);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.time_signature_confidence)) {
        this.time_signature_confidence = data().deepCopy(fields()[29].schema(), other.time_signature_confidence);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.track_id)) {
        this.track_id = data().deepCopy(fields()[30].schema(), other.track_id);
        fieldSetFlags()[30] = true;
      }
    }

    /**
      * Gets the value of the 'analysis_sample_rate' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getAnalysisSampleRate() {
      return analysis_sample_rate;
    }


    /**
      * Sets the value of the 'analysis_sample_rate' field.
      * @param value The value of 'analysis_sample_rate'.
      * @return This builder.
      */
    public song.avro.songs.Builder setAnalysisSampleRate(java.util.List<java.lang.Integer> value) {
      validate(fields()[0], value);
      this.analysis_sample_rate = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'analysis_sample_rate' field has been set.
      * @return True if the 'analysis_sample_rate' field has been set, false otherwise.
      */
    public boolean hasAnalysisSampleRate() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'analysis_sample_rate' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearAnalysisSampleRate() {
      analysis_sample_rate = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'audio_md5' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getAudioMd5() {
      return audio_md5;
    }


    /**
      * Sets the value of the 'audio_md5' field.
      * @param value The value of 'audio_md5'.
      * @return This builder.
      */
    public song.avro.songs.Builder setAudioMd5(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[1], value);
      this.audio_md5 = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'audio_md5' field has been set.
      * @return True if the 'audio_md5' field has been set, false otherwise.
      */
    public boolean hasAudioMd5() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'audio_md5' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearAudioMd5() {
      audio_md5 = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'danceability' field.
      * @return The value.
      */
    public java.util.List<java.lang.Double> getDanceability() {
      return danceability;
    }


    /**
      * Sets the value of the 'danceability' field.
      * @param value The value of 'danceability'.
      * @return This builder.
      */
    public song.avro.songs.Builder setDanceability(java.util.List<java.lang.Double> value) {
      validate(fields()[2], value);
      this.danceability = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'danceability' field has been set.
      * @return True if the 'danceability' field has been set, false otherwise.
      */
    public boolean hasDanceability() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'danceability' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearDanceability() {
      danceability = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'duration' field.
      * @return The value.
      */
    public java.util.List<java.lang.Double> getDuration() {
      return duration;
    }


    /**
      * Sets the value of the 'duration' field.
      * @param value The value of 'duration'.
      * @return This builder.
      */
    public song.avro.songs.Builder setDuration(java.util.List<java.lang.Double> value) {
      validate(fields()[3], value);
      this.duration = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'duration' field has been set.
      * @return True if the 'duration' field has been set, false otherwise.
      */
    public boolean hasDuration() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'duration' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearDuration() {
      duration = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'end_of_fade_in' field.
      * @return The value.
      */
    public java.util.List<java.lang.Double> getEndOfFadeIn() {
      return end_of_fade_in;
    }


    /**
      * Sets the value of the 'end_of_fade_in' field.
      * @param value The value of 'end_of_fade_in'.
      * @return This builder.
      */
    public song.avro.songs.Builder setEndOfFadeIn(java.util.List<java.lang.Double> value) {
      validate(fields()[4], value);
      this.end_of_fade_in = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'end_of_fade_in' field has been set.
      * @return True if the 'end_of_fade_in' field has been set, false otherwise.
      */
    public boolean hasEndOfFadeIn() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'end_of_fade_in' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearEndOfFadeIn() {
      end_of_fade_in = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'energy' field.
      * @return The value.
      */
    public java.util.List<java.lang.Double> getEnergy() {
      return energy;
    }


    /**
      * Sets the value of the 'energy' field.
      * @param value The value of 'energy'.
      * @return This builder.
      */
    public song.avro.songs.Builder setEnergy(java.util.List<java.lang.Double> value) {
      validate(fields()[5], value);
      this.energy = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'energy' field has been set.
      * @return True if the 'energy' field has been set, false otherwise.
      */
    public boolean hasEnergy() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'energy' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearEnergy() {
      energy = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'idx_bars_confidence' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getIdxBarsConfidence() {
      return idx_bars_confidence;
    }


    /**
      * Sets the value of the 'idx_bars_confidence' field.
      * @param value The value of 'idx_bars_confidence'.
      * @return This builder.
      */
    public song.avro.songs.Builder setIdxBarsConfidence(java.util.List<java.lang.Integer> value) {
      validate(fields()[6], value);
      this.idx_bars_confidence = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'idx_bars_confidence' field has been set.
      * @return True if the 'idx_bars_confidence' field has been set, false otherwise.
      */
    public boolean hasIdxBarsConfidence() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'idx_bars_confidence' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearIdxBarsConfidence() {
      idx_bars_confidence = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'idx_bars_start' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getIdxBarsStart() {
      return idx_bars_start;
    }


    /**
      * Sets the value of the 'idx_bars_start' field.
      * @param value The value of 'idx_bars_start'.
      * @return This builder.
      */
    public song.avro.songs.Builder setIdxBarsStart(java.util.List<java.lang.Integer> value) {
      validate(fields()[7], value);
      this.idx_bars_start = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'idx_bars_start' field has been set.
      * @return True if the 'idx_bars_start' field has been set, false otherwise.
      */
    public boolean hasIdxBarsStart() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'idx_bars_start' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearIdxBarsStart() {
      idx_bars_start = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'idx_beats_confidence' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getIdxBeatsConfidence() {
      return idx_beats_confidence;
    }


    /**
      * Sets the value of the 'idx_beats_confidence' field.
      * @param value The value of 'idx_beats_confidence'.
      * @return This builder.
      */
    public song.avro.songs.Builder setIdxBeatsConfidence(java.util.List<java.lang.Integer> value) {
      validate(fields()[8], value);
      this.idx_beats_confidence = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'idx_beats_confidence' field has been set.
      * @return True if the 'idx_beats_confidence' field has been set, false otherwise.
      */
    public boolean hasIdxBeatsConfidence() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'idx_beats_confidence' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearIdxBeatsConfidence() {
      idx_beats_confidence = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'idx_beats_start' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getIdxBeatsStart() {
      return idx_beats_start;
    }


    /**
      * Sets the value of the 'idx_beats_start' field.
      * @param value The value of 'idx_beats_start'.
      * @return This builder.
      */
    public song.avro.songs.Builder setIdxBeatsStart(java.util.List<java.lang.Integer> value) {
      validate(fields()[9], value);
      this.idx_beats_start = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'idx_beats_start' field has been set.
      * @return True if the 'idx_beats_start' field has been set, false otherwise.
      */
    public boolean hasIdxBeatsStart() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'idx_beats_start' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearIdxBeatsStart() {
      idx_beats_start = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'idx_sections_confidence' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getIdxSectionsConfidence() {
      return idx_sections_confidence;
    }


    /**
      * Sets the value of the 'idx_sections_confidence' field.
      * @param value The value of 'idx_sections_confidence'.
      * @return This builder.
      */
    public song.avro.songs.Builder setIdxSectionsConfidence(java.util.List<java.lang.Integer> value) {
      validate(fields()[10], value);
      this.idx_sections_confidence = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'idx_sections_confidence' field has been set.
      * @return True if the 'idx_sections_confidence' field has been set, false otherwise.
      */
    public boolean hasIdxSectionsConfidence() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'idx_sections_confidence' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearIdxSectionsConfidence() {
      idx_sections_confidence = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'idx_sections_start' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getIdxSectionsStart() {
      return idx_sections_start;
    }


    /**
      * Sets the value of the 'idx_sections_start' field.
      * @param value The value of 'idx_sections_start'.
      * @return This builder.
      */
    public song.avro.songs.Builder setIdxSectionsStart(java.util.List<java.lang.Integer> value) {
      validate(fields()[11], value);
      this.idx_sections_start = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'idx_sections_start' field has been set.
      * @return True if the 'idx_sections_start' field has been set, false otherwise.
      */
    public boolean hasIdxSectionsStart() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'idx_sections_start' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearIdxSectionsStart() {
      idx_sections_start = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'idx_segments_confidence' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getIdxSegmentsConfidence() {
      return idx_segments_confidence;
    }


    /**
      * Sets the value of the 'idx_segments_confidence' field.
      * @param value The value of 'idx_segments_confidence'.
      * @return This builder.
      */
    public song.avro.songs.Builder setIdxSegmentsConfidence(java.util.List<java.lang.Integer> value) {
      validate(fields()[12], value);
      this.idx_segments_confidence = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'idx_segments_confidence' field has been set.
      * @return True if the 'idx_segments_confidence' field has been set, false otherwise.
      */
    public boolean hasIdxSegmentsConfidence() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'idx_segments_confidence' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearIdxSegmentsConfidence() {
      idx_segments_confidence = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'idx_segments_loudness_max' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getIdxSegmentsLoudnessMax() {
      return idx_segments_loudness_max;
    }


    /**
      * Sets the value of the 'idx_segments_loudness_max' field.
      * @param value The value of 'idx_segments_loudness_max'.
      * @return This builder.
      */
    public song.avro.songs.Builder setIdxSegmentsLoudnessMax(java.util.List<java.lang.Integer> value) {
      validate(fields()[13], value);
      this.idx_segments_loudness_max = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'idx_segments_loudness_max' field has been set.
      * @return True if the 'idx_segments_loudness_max' field has been set, false otherwise.
      */
    public boolean hasIdxSegmentsLoudnessMax() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'idx_segments_loudness_max' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearIdxSegmentsLoudnessMax() {
      idx_segments_loudness_max = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'idx_segments_loudness_max_time' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getIdxSegmentsLoudnessMaxTime() {
      return idx_segments_loudness_max_time;
    }


    /**
      * Sets the value of the 'idx_segments_loudness_max_time' field.
      * @param value The value of 'idx_segments_loudness_max_time'.
      * @return This builder.
      */
    public song.avro.songs.Builder setIdxSegmentsLoudnessMaxTime(java.util.List<java.lang.Integer> value) {
      validate(fields()[14], value);
      this.idx_segments_loudness_max_time = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'idx_segments_loudness_max_time' field has been set.
      * @return True if the 'idx_segments_loudness_max_time' field has been set, false otherwise.
      */
    public boolean hasIdxSegmentsLoudnessMaxTime() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'idx_segments_loudness_max_time' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearIdxSegmentsLoudnessMaxTime() {
      idx_segments_loudness_max_time = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'idx_segments_loudness_start' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getIdxSegmentsLoudnessStart() {
      return idx_segments_loudness_start;
    }


    /**
      * Sets the value of the 'idx_segments_loudness_start' field.
      * @param value The value of 'idx_segments_loudness_start'.
      * @return This builder.
      */
    public song.avro.songs.Builder setIdxSegmentsLoudnessStart(java.util.List<java.lang.Integer> value) {
      validate(fields()[15], value);
      this.idx_segments_loudness_start = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'idx_segments_loudness_start' field has been set.
      * @return True if the 'idx_segments_loudness_start' field has been set, false otherwise.
      */
    public boolean hasIdxSegmentsLoudnessStart() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'idx_segments_loudness_start' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearIdxSegmentsLoudnessStart() {
      idx_segments_loudness_start = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'idx_segments_pitches' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getIdxSegmentsPitches() {
      return idx_segments_pitches;
    }


    /**
      * Sets the value of the 'idx_segments_pitches' field.
      * @param value The value of 'idx_segments_pitches'.
      * @return This builder.
      */
    public song.avro.songs.Builder setIdxSegmentsPitches(java.util.List<java.lang.Integer> value) {
      validate(fields()[16], value);
      this.idx_segments_pitches = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'idx_segments_pitches' field has been set.
      * @return True if the 'idx_segments_pitches' field has been set, false otherwise.
      */
    public boolean hasIdxSegmentsPitches() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'idx_segments_pitches' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearIdxSegmentsPitches() {
      idx_segments_pitches = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'idx_segments_start' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getIdxSegmentsStart() {
      return idx_segments_start;
    }


    /**
      * Sets the value of the 'idx_segments_start' field.
      * @param value The value of 'idx_segments_start'.
      * @return This builder.
      */
    public song.avro.songs.Builder setIdxSegmentsStart(java.util.List<java.lang.Integer> value) {
      validate(fields()[17], value);
      this.idx_segments_start = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'idx_segments_start' field has been set.
      * @return True if the 'idx_segments_start' field has been set, false otherwise.
      */
    public boolean hasIdxSegmentsStart() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'idx_segments_start' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearIdxSegmentsStart() {
      idx_segments_start = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'idx_segments_timbre' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getIdxSegmentsTimbre() {
      return idx_segments_timbre;
    }


    /**
      * Sets the value of the 'idx_segments_timbre' field.
      * @param value The value of 'idx_segments_timbre'.
      * @return This builder.
      */
    public song.avro.songs.Builder setIdxSegmentsTimbre(java.util.List<java.lang.Integer> value) {
      validate(fields()[18], value);
      this.idx_segments_timbre = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'idx_segments_timbre' field has been set.
      * @return True if the 'idx_segments_timbre' field has been set, false otherwise.
      */
    public boolean hasIdxSegmentsTimbre() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'idx_segments_timbre' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearIdxSegmentsTimbre() {
      idx_segments_timbre = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'idx_tatums_confidence' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getIdxTatumsConfidence() {
      return idx_tatums_confidence;
    }


    /**
      * Sets the value of the 'idx_tatums_confidence' field.
      * @param value The value of 'idx_tatums_confidence'.
      * @return This builder.
      */
    public song.avro.songs.Builder setIdxTatumsConfidence(java.util.List<java.lang.Integer> value) {
      validate(fields()[19], value);
      this.idx_tatums_confidence = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'idx_tatums_confidence' field has been set.
      * @return True if the 'idx_tatums_confidence' field has been set, false otherwise.
      */
    public boolean hasIdxTatumsConfidence() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'idx_tatums_confidence' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearIdxTatumsConfidence() {
      idx_tatums_confidence = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'idx_tatums_start' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getIdxTatumsStart() {
      return idx_tatums_start;
    }


    /**
      * Sets the value of the 'idx_tatums_start' field.
      * @param value The value of 'idx_tatums_start'.
      * @return This builder.
      */
    public song.avro.songs.Builder setIdxTatumsStart(java.util.List<java.lang.Integer> value) {
      validate(fields()[20], value);
      this.idx_tatums_start = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'idx_tatums_start' field has been set.
      * @return True if the 'idx_tatums_start' field has been set, false otherwise.
      */
    public boolean hasIdxTatumsStart() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'idx_tatums_start' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearIdxTatumsStart() {
      idx_tatums_start = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'key' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getKey() {
      return key;
    }


    /**
      * Sets the value of the 'key' field.
      * @param value The value of 'key'.
      * @return This builder.
      */
    public song.avro.songs.Builder setKey(java.util.List<java.lang.Integer> value) {
      validate(fields()[21], value);
      this.key = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'key' field has been set.
      * @return True if the 'key' field has been set, false otherwise.
      */
    public boolean hasKey() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'key' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearKey() {
      key = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'key_confidence' field.
      * @return The value.
      */
    public java.util.List<java.lang.Double> getKeyConfidence() {
      return key_confidence;
    }


    /**
      * Sets the value of the 'key_confidence' field.
      * @param value The value of 'key_confidence'.
      * @return This builder.
      */
    public song.avro.songs.Builder setKeyConfidence(java.util.List<java.lang.Double> value) {
      validate(fields()[22], value);
      this.key_confidence = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'key_confidence' field has been set.
      * @return True if the 'key_confidence' field has been set, false otherwise.
      */
    public boolean hasKeyConfidence() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'key_confidence' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearKeyConfidence() {
      key_confidence = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'loudness' field.
      * @return The value.
      */
    public java.util.List<java.lang.Double> getLoudness() {
      return loudness;
    }


    /**
      * Sets the value of the 'loudness' field.
      * @param value The value of 'loudness'.
      * @return This builder.
      */
    public song.avro.songs.Builder setLoudness(java.util.List<java.lang.Double> value) {
      validate(fields()[23], value);
      this.loudness = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'loudness' field has been set.
      * @return True if the 'loudness' field has been set, false otherwise.
      */
    public boolean hasLoudness() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'loudness' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearLoudness() {
      loudness = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'mode' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getMode() {
      return mode;
    }


    /**
      * Sets the value of the 'mode' field.
      * @param value The value of 'mode'.
      * @return This builder.
      */
    public song.avro.songs.Builder setMode(java.util.List<java.lang.Integer> value) {
      validate(fields()[24], value);
      this.mode = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'mode' field has been set.
      * @return True if the 'mode' field has been set, false otherwise.
      */
    public boolean hasMode() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'mode' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearMode() {
      mode = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'mode_confidence' field.
      * @return The value.
      */
    public java.util.List<java.lang.Double> getModeConfidence() {
      return mode_confidence;
    }


    /**
      * Sets the value of the 'mode_confidence' field.
      * @param value The value of 'mode_confidence'.
      * @return This builder.
      */
    public song.avro.songs.Builder setModeConfidence(java.util.List<java.lang.Double> value) {
      validate(fields()[25], value);
      this.mode_confidence = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'mode_confidence' field has been set.
      * @return True if the 'mode_confidence' field has been set, false otherwise.
      */
    public boolean hasModeConfidence() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'mode_confidence' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearModeConfidence() {
      mode_confidence = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'start_of_fade_out' field.
      * @return The value.
      */
    public java.util.List<java.lang.Double> getStartOfFadeOut() {
      return start_of_fade_out;
    }


    /**
      * Sets the value of the 'start_of_fade_out' field.
      * @param value The value of 'start_of_fade_out'.
      * @return This builder.
      */
    public song.avro.songs.Builder setStartOfFadeOut(java.util.List<java.lang.Double> value) {
      validate(fields()[26], value);
      this.start_of_fade_out = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'start_of_fade_out' field has been set.
      * @return True if the 'start_of_fade_out' field has been set, false otherwise.
      */
    public boolean hasStartOfFadeOut() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'start_of_fade_out' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearStartOfFadeOut() {
      start_of_fade_out = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'tempo' field.
      * @return The value.
      */
    public java.util.List<java.lang.Double> getTempo() {
      return tempo;
    }


    /**
      * Sets the value of the 'tempo' field.
      * @param value The value of 'tempo'.
      * @return This builder.
      */
    public song.avro.songs.Builder setTempo(java.util.List<java.lang.Double> value) {
      validate(fields()[27], value);
      this.tempo = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'tempo' field has been set.
      * @return True if the 'tempo' field has been set, false otherwise.
      */
    public boolean hasTempo() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'tempo' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearTempo() {
      tempo = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'time_signature' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getTimeSignature() {
      return time_signature;
    }


    /**
      * Sets the value of the 'time_signature' field.
      * @param value The value of 'time_signature'.
      * @return This builder.
      */
    public song.avro.songs.Builder setTimeSignature(java.util.List<java.lang.Integer> value) {
      validate(fields()[28], value);
      this.time_signature = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'time_signature' field has been set.
      * @return True if the 'time_signature' field has been set, false otherwise.
      */
    public boolean hasTimeSignature() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'time_signature' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearTimeSignature() {
      time_signature = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'time_signature_confidence' field.
      * @return The value.
      */
    public java.util.List<java.lang.Double> getTimeSignatureConfidence() {
      return time_signature_confidence;
    }


    /**
      * Sets the value of the 'time_signature_confidence' field.
      * @param value The value of 'time_signature_confidence'.
      * @return This builder.
      */
    public song.avro.songs.Builder setTimeSignatureConfidence(java.util.List<java.lang.Double> value) {
      validate(fields()[29], value);
      this.time_signature_confidence = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'time_signature_confidence' field has been set.
      * @return True if the 'time_signature_confidence' field has been set, false otherwise.
      */
    public boolean hasTimeSignatureConfidence() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'time_signature_confidence' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearTimeSignatureConfidence() {
      time_signature_confidence = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'track_id' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getTrackId() {
      return track_id;
    }


    /**
      * Sets the value of the 'track_id' field.
      * @param value The value of 'track_id'.
      * @return This builder.
      */
    public song.avro.songs.Builder setTrackId(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[30], value);
      this.track_id = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'track_id' field has been set.
      * @return True if the 'track_id' field has been set, false otherwise.
      */
    public boolean hasTrackId() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'track_id' field.
      * @return This builder.
      */
    public song.avro.songs.Builder clearTrackId() {
      track_id = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public songs build() {
      try {
        songs record = new songs();
        record.analysis_sample_rate = fieldSetFlags()[0] ? this.analysis_sample_rate : (java.util.List<java.lang.Integer>) defaultValue(fields()[0]);
        record.audio_md5 = fieldSetFlags()[1] ? this.audio_md5 : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[1]);
        record.danceability = fieldSetFlags()[2] ? this.danceability : (java.util.List<java.lang.Double>) defaultValue(fields()[2]);
        record.duration = fieldSetFlags()[3] ? this.duration : (java.util.List<java.lang.Double>) defaultValue(fields()[3]);
        record.end_of_fade_in = fieldSetFlags()[4] ? this.end_of_fade_in : (java.util.List<java.lang.Double>) defaultValue(fields()[4]);
        record.energy = fieldSetFlags()[5] ? this.energy : (java.util.List<java.lang.Double>) defaultValue(fields()[5]);
        record.idx_bars_confidence = fieldSetFlags()[6] ? this.idx_bars_confidence : (java.util.List<java.lang.Integer>) defaultValue(fields()[6]);
        record.idx_bars_start = fieldSetFlags()[7] ? this.idx_bars_start : (java.util.List<java.lang.Integer>) defaultValue(fields()[7]);
        record.idx_beats_confidence = fieldSetFlags()[8] ? this.idx_beats_confidence : (java.util.List<java.lang.Integer>) defaultValue(fields()[8]);
        record.idx_beats_start = fieldSetFlags()[9] ? this.idx_beats_start : (java.util.List<java.lang.Integer>) defaultValue(fields()[9]);
        record.idx_sections_confidence = fieldSetFlags()[10] ? this.idx_sections_confidence : (java.util.List<java.lang.Integer>) defaultValue(fields()[10]);
        record.idx_sections_start = fieldSetFlags()[11] ? this.idx_sections_start : (java.util.List<java.lang.Integer>) defaultValue(fields()[11]);
        record.idx_segments_confidence = fieldSetFlags()[12] ? this.idx_segments_confidence : (java.util.List<java.lang.Integer>) defaultValue(fields()[12]);
        record.idx_segments_loudness_max = fieldSetFlags()[13] ? this.idx_segments_loudness_max : (java.util.List<java.lang.Integer>) defaultValue(fields()[13]);
        record.idx_segments_loudness_max_time = fieldSetFlags()[14] ? this.idx_segments_loudness_max_time : (java.util.List<java.lang.Integer>) defaultValue(fields()[14]);
        record.idx_segments_loudness_start = fieldSetFlags()[15] ? this.idx_segments_loudness_start : (java.util.List<java.lang.Integer>) defaultValue(fields()[15]);
        record.idx_segments_pitches = fieldSetFlags()[16] ? this.idx_segments_pitches : (java.util.List<java.lang.Integer>) defaultValue(fields()[16]);
        record.idx_segments_start = fieldSetFlags()[17] ? this.idx_segments_start : (java.util.List<java.lang.Integer>) defaultValue(fields()[17]);
        record.idx_segments_timbre = fieldSetFlags()[18] ? this.idx_segments_timbre : (java.util.List<java.lang.Integer>) defaultValue(fields()[18]);
        record.idx_tatums_confidence = fieldSetFlags()[19] ? this.idx_tatums_confidence : (java.util.List<java.lang.Integer>) defaultValue(fields()[19]);
        record.idx_tatums_start = fieldSetFlags()[20] ? this.idx_tatums_start : (java.util.List<java.lang.Integer>) defaultValue(fields()[20]);
        record.key = fieldSetFlags()[21] ? this.key : (java.util.List<java.lang.Integer>) defaultValue(fields()[21]);
        record.key_confidence = fieldSetFlags()[22] ? this.key_confidence : (java.util.List<java.lang.Double>) defaultValue(fields()[22]);
        record.loudness = fieldSetFlags()[23] ? this.loudness : (java.util.List<java.lang.Double>) defaultValue(fields()[23]);
        record.mode = fieldSetFlags()[24] ? this.mode : (java.util.List<java.lang.Integer>) defaultValue(fields()[24]);
        record.mode_confidence = fieldSetFlags()[25] ? this.mode_confidence : (java.util.List<java.lang.Double>) defaultValue(fields()[25]);
        record.start_of_fade_out = fieldSetFlags()[26] ? this.start_of_fade_out : (java.util.List<java.lang.Double>) defaultValue(fields()[26]);
        record.tempo = fieldSetFlags()[27] ? this.tempo : (java.util.List<java.lang.Double>) defaultValue(fields()[27]);
        record.time_signature = fieldSetFlags()[28] ? this.time_signature : (java.util.List<java.lang.Integer>) defaultValue(fields()[28]);
        record.time_signature_confidence = fieldSetFlags()[29] ? this.time_signature_confidence : (java.util.List<java.lang.Double>) defaultValue(fields()[29]);
        record.track_id = fieldSetFlags()[30] ? this.track_id : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[30]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<songs>
    WRITER$ = (org.apache.avro.io.DatumWriter<songs>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<songs>
    READER$ = (org.apache.avro.io.DatumReader<songs>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.analysis_sample_rate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.analysis_sample_rate.size();
      out.writeArrayStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (java.lang.Integer e0: this.analysis_sample_rate) {
        actualSize0++;
        out.startItem();
        out.writeInt(e0);
      }
      out.writeArrayEnd();
      if (actualSize0 != size0)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

    long size1 = this.audio_md5.size();
    out.writeArrayStart();
    out.setItemCount(size1);
    long actualSize1 = 0;
    for (java.lang.CharSequence e1: this.audio_md5) {
      actualSize1++;
      out.startItem();
      out.writeString(e1);
    }
    out.writeArrayEnd();
    if (actualSize1 != size1)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");

    long size2 = this.danceability.size();
    out.writeArrayStart();
    out.setItemCount(size2);
    long actualSize2 = 0;
    for (java.lang.Double e2: this.danceability) {
      actualSize2++;
      out.startItem();
      out.writeDouble(e2);
    }
    out.writeArrayEnd();
    if (actualSize2 != size2)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size2 + ", but element count was " + actualSize2 + ".");

    long size3 = this.duration.size();
    out.writeArrayStart();
    out.setItemCount(size3);
    long actualSize3 = 0;
    for (java.lang.Double e3: this.duration) {
      actualSize3++;
      out.startItem();
      out.writeDouble(e3);
    }
    out.writeArrayEnd();
    if (actualSize3 != size3)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size3 + ", but element count was " + actualSize3 + ".");

    long size4 = this.end_of_fade_in.size();
    out.writeArrayStart();
    out.setItemCount(size4);
    long actualSize4 = 0;
    for (java.lang.Double e4: this.end_of_fade_in) {
      actualSize4++;
      out.startItem();
      out.writeDouble(e4);
    }
    out.writeArrayEnd();
    if (actualSize4 != size4)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size4 + ", but element count was " + actualSize4 + ".");

    long size5 = this.energy.size();
    out.writeArrayStart();
    out.setItemCount(size5);
    long actualSize5 = 0;
    for (java.lang.Double e5: this.energy) {
      actualSize5++;
      out.startItem();
      out.writeDouble(e5);
    }
    out.writeArrayEnd();
    if (actualSize5 != size5)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size5 + ", but element count was " + actualSize5 + ".");

    if (this.idx_bars_confidence == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size6 = this.idx_bars_confidence.size();
      out.writeArrayStart();
      out.setItemCount(size6);
      long actualSize6 = 0;
      for (java.lang.Integer e6: this.idx_bars_confidence) {
        actualSize6++;
        out.startItem();
        out.writeInt(e6);
      }
      out.writeArrayEnd();
      if (actualSize6 != size6)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size6 + ", but element count was " + actualSize6 + ".");
    }

    if (this.idx_bars_start == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size7 = this.idx_bars_start.size();
      out.writeArrayStart();
      out.setItemCount(size7);
      long actualSize7 = 0;
      for (java.lang.Integer e7: this.idx_bars_start) {
        actualSize7++;
        out.startItem();
        out.writeInt(e7);
      }
      out.writeArrayEnd();
      if (actualSize7 != size7)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size7 + ", but element count was " + actualSize7 + ".");
    }

    if (this.idx_beats_confidence == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size8 = this.idx_beats_confidence.size();
      out.writeArrayStart();
      out.setItemCount(size8);
      long actualSize8 = 0;
      for (java.lang.Integer e8: this.idx_beats_confidence) {
        actualSize8++;
        out.startItem();
        out.writeInt(e8);
      }
      out.writeArrayEnd();
      if (actualSize8 != size8)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size8 + ", but element count was " + actualSize8 + ".");
    }

    if (this.idx_beats_start == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size9 = this.idx_beats_start.size();
      out.writeArrayStart();
      out.setItemCount(size9);
      long actualSize9 = 0;
      for (java.lang.Integer e9: this.idx_beats_start) {
        actualSize9++;
        out.startItem();
        out.writeInt(e9);
      }
      out.writeArrayEnd();
      if (actualSize9 != size9)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size9 + ", but element count was " + actualSize9 + ".");
    }

    if (this.idx_sections_confidence == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size10 = this.idx_sections_confidence.size();
      out.writeArrayStart();
      out.setItemCount(size10);
      long actualSize10 = 0;
      for (java.lang.Integer e10: this.idx_sections_confidence) {
        actualSize10++;
        out.startItem();
        out.writeInt(e10);
      }
      out.writeArrayEnd();
      if (actualSize10 != size10)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size10 + ", but element count was " + actualSize10 + ".");
    }

    if (this.idx_sections_start == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size11 = this.idx_sections_start.size();
      out.writeArrayStart();
      out.setItemCount(size11);
      long actualSize11 = 0;
      for (java.lang.Integer e11: this.idx_sections_start) {
        actualSize11++;
        out.startItem();
        out.writeInt(e11);
      }
      out.writeArrayEnd();
      if (actualSize11 != size11)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size11 + ", but element count was " + actualSize11 + ".");
    }

    if (this.idx_segments_confidence == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size12 = this.idx_segments_confidence.size();
      out.writeArrayStart();
      out.setItemCount(size12);
      long actualSize12 = 0;
      for (java.lang.Integer e12: this.idx_segments_confidence) {
        actualSize12++;
        out.startItem();
        out.writeInt(e12);
      }
      out.writeArrayEnd();
      if (actualSize12 != size12)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size12 + ", but element count was " + actualSize12 + ".");
    }

    if (this.idx_segments_loudness_max == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size13 = this.idx_segments_loudness_max.size();
      out.writeArrayStart();
      out.setItemCount(size13);
      long actualSize13 = 0;
      for (java.lang.Integer e13: this.idx_segments_loudness_max) {
        actualSize13++;
        out.startItem();
        out.writeInt(e13);
      }
      out.writeArrayEnd();
      if (actualSize13 != size13)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size13 + ", but element count was " + actualSize13 + ".");
    }

    if (this.idx_segments_loudness_max_time == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size14 = this.idx_segments_loudness_max_time.size();
      out.writeArrayStart();
      out.setItemCount(size14);
      long actualSize14 = 0;
      for (java.lang.Integer e14: this.idx_segments_loudness_max_time) {
        actualSize14++;
        out.startItem();
        out.writeInt(e14);
      }
      out.writeArrayEnd();
      if (actualSize14 != size14)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size14 + ", but element count was " + actualSize14 + ".");
    }

    if (this.idx_segments_loudness_start == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size15 = this.idx_segments_loudness_start.size();
      out.writeArrayStart();
      out.setItemCount(size15);
      long actualSize15 = 0;
      for (java.lang.Integer e15: this.idx_segments_loudness_start) {
        actualSize15++;
        out.startItem();
        out.writeInt(e15);
      }
      out.writeArrayEnd();
      if (actualSize15 != size15)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size15 + ", but element count was " + actualSize15 + ".");
    }

    if (this.idx_segments_pitches == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size16 = this.idx_segments_pitches.size();
      out.writeArrayStart();
      out.setItemCount(size16);
      long actualSize16 = 0;
      for (java.lang.Integer e16: this.idx_segments_pitches) {
        actualSize16++;
        out.startItem();
        out.writeInt(e16);
      }
      out.writeArrayEnd();
      if (actualSize16 != size16)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size16 + ", but element count was " + actualSize16 + ".");
    }

    if (this.idx_segments_start == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size17 = this.idx_segments_start.size();
      out.writeArrayStart();
      out.setItemCount(size17);
      long actualSize17 = 0;
      for (java.lang.Integer e17: this.idx_segments_start) {
        actualSize17++;
        out.startItem();
        out.writeInt(e17);
      }
      out.writeArrayEnd();
      if (actualSize17 != size17)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size17 + ", but element count was " + actualSize17 + ".");
    }

    if (this.idx_segments_timbre == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size18 = this.idx_segments_timbre.size();
      out.writeArrayStart();
      out.setItemCount(size18);
      long actualSize18 = 0;
      for (java.lang.Integer e18: this.idx_segments_timbre) {
        actualSize18++;
        out.startItem();
        out.writeInt(e18);
      }
      out.writeArrayEnd();
      if (actualSize18 != size18)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size18 + ", but element count was " + actualSize18 + ".");
    }

    if (this.idx_tatums_confidence == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size19 = this.idx_tatums_confidence.size();
      out.writeArrayStart();
      out.setItemCount(size19);
      long actualSize19 = 0;
      for (java.lang.Integer e19: this.idx_tatums_confidence) {
        actualSize19++;
        out.startItem();
        out.writeInt(e19);
      }
      out.writeArrayEnd();
      if (actualSize19 != size19)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size19 + ", but element count was " + actualSize19 + ".");
    }

    if (this.idx_tatums_start == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size20 = this.idx_tatums_start.size();
      out.writeArrayStart();
      out.setItemCount(size20);
      long actualSize20 = 0;
      for (java.lang.Integer e20: this.idx_tatums_start) {
        actualSize20++;
        out.startItem();
        out.writeInt(e20);
      }
      out.writeArrayEnd();
      if (actualSize20 != size20)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size20 + ", but element count was " + actualSize20 + ".");
    }

    if (this.key == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size21 = this.key.size();
      out.writeArrayStart();
      out.setItemCount(size21);
      long actualSize21 = 0;
      for (java.lang.Integer e21: this.key) {
        actualSize21++;
        out.startItem();
        out.writeInt(e21);
      }
      out.writeArrayEnd();
      if (actualSize21 != size21)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size21 + ", but element count was " + actualSize21 + ".");
    }

    long size22 = this.key_confidence.size();
    out.writeArrayStart();
    out.setItemCount(size22);
    long actualSize22 = 0;
    for (java.lang.Double e22: this.key_confidence) {
      actualSize22++;
      out.startItem();
      out.writeDouble(e22);
    }
    out.writeArrayEnd();
    if (actualSize22 != size22)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size22 + ", but element count was " + actualSize22 + ".");

    long size23 = this.loudness.size();
    out.writeArrayStart();
    out.setItemCount(size23);
    long actualSize23 = 0;
    for (java.lang.Double e23: this.loudness) {
      actualSize23++;
      out.startItem();
      out.writeDouble(e23);
    }
    out.writeArrayEnd();
    if (actualSize23 != size23)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size23 + ", but element count was " + actualSize23 + ".");

    if (this.mode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size24 = this.mode.size();
      out.writeArrayStart();
      out.setItemCount(size24);
      long actualSize24 = 0;
      for (java.lang.Integer e24: this.mode) {
        actualSize24++;
        out.startItem();
        out.writeInt(e24);
      }
      out.writeArrayEnd();
      if (actualSize24 != size24)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size24 + ", but element count was " + actualSize24 + ".");
    }

    long size25 = this.mode_confidence.size();
    out.writeArrayStart();
    out.setItemCount(size25);
    long actualSize25 = 0;
    for (java.lang.Double e25: this.mode_confidence) {
      actualSize25++;
      out.startItem();
      out.writeDouble(e25);
    }
    out.writeArrayEnd();
    if (actualSize25 != size25)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size25 + ", but element count was " + actualSize25 + ".");

    long size26 = this.start_of_fade_out.size();
    out.writeArrayStart();
    out.setItemCount(size26);
    long actualSize26 = 0;
    for (java.lang.Double e26: this.start_of_fade_out) {
      actualSize26++;
      out.startItem();
      out.writeDouble(e26);
    }
    out.writeArrayEnd();
    if (actualSize26 != size26)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size26 + ", but element count was " + actualSize26 + ".");

    long size27 = this.tempo.size();
    out.writeArrayStart();
    out.setItemCount(size27);
    long actualSize27 = 0;
    for (java.lang.Double e27: this.tempo) {
      actualSize27++;
      out.startItem();
      out.writeDouble(e27);
    }
    out.writeArrayEnd();
    if (actualSize27 != size27)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size27 + ", but element count was " + actualSize27 + ".");

    long size28 = this.time_signature.size();
    out.writeArrayStart();
    out.setItemCount(size28);
    long actualSize28 = 0;
    for (java.lang.Integer e28: this.time_signature) {
      actualSize28++;
      out.startItem();
      out.writeInt(e28);
    }
    out.writeArrayEnd();
    if (actualSize28 != size28)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size28 + ", but element count was " + actualSize28 + ".");

    long size29 = this.time_signature_confidence.size();
    out.writeArrayStart();
    out.setItemCount(size29);
    long actualSize29 = 0;
    for (java.lang.Double e29: this.time_signature_confidence) {
      actualSize29++;
      out.startItem();
      out.writeDouble(e29);
    }
    out.writeArrayEnd();
    if (actualSize29 != size29)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size29 + ", but element count was " + actualSize29 + ".");

    long size30 = this.track_id.size();
    out.writeArrayStart();
    out.setItemCount(size30);
    long actualSize30 = 0;
    for (java.lang.CharSequence e30: this.track_id) {
      actualSize30++;
      out.startItem();
      out.writeString(e30);
    }
    out.writeArrayEnd();
    if (actualSize30 != size30)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size30 + ", but element count was " + actualSize30 + ".");

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.analysis_sample_rate = null;
      } else {
        long size0 = in.readArrayStart();
        java.util.List<java.lang.Integer> a0 = this.analysis_sample_rate;
        if (a0 == null) {
          a0 = new SpecificData.Array<java.lang.Integer>((int)size0, SCHEMA$.getField("analysis_sample_rate").schema().getTypes().get(1));
          this.analysis_sample_rate = a0;
        } else a0.clear();
        SpecificData.Array<java.lang.Integer> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a0 : null);
        for ( ; 0 < size0; size0 = in.arrayNext()) {
          for ( ; size0 != 0; size0--) {
            java.lang.Integer e0 = (ga0 != null ? ga0.peek() : null);
            e0 = in.readInt();
            a0.add(e0);
          }
        }
      }

      long size1 = in.readArrayStart();
      java.util.List<java.lang.CharSequence> a1 = this.audio_md5;
      if (a1 == null) {
        a1 = new SpecificData.Array<java.lang.CharSequence>((int)size1, SCHEMA$.getField("audio_md5").schema());
        this.audio_md5 = a1;
      } else a1.clear();
      SpecificData.Array<java.lang.CharSequence> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a1 : null);
      for ( ; 0 < size1; size1 = in.arrayNext()) {
        for ( ; size1 != 0; size1--) {
          java.lang.CharSequence e1 = (ga1 != null ? ga1.peek() : null);
          e1 = in.readString(e1 instanceof Utf8 ? (Utf8)e1 : null);
          a1.add(e1);
        }
      }

      long size2 = in.readArrayStart();
      java.util.List<java.lang.Double> a2 = this.danceability;
      if (a2 == null) {
        a2 = new SpecificData.Array<java.lang.Double>((int)size2, SCHEMA$.getField("danceability").schema());
        this.danceability = a2;
      } else a2.clear();
      SpecificData.Array<java.lang.Double> ga2 = (a2 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Double>)a2 : null);
      for ( ; 0 < size2; size2 = in.arrayNext()) {
        for ( ; size2 != 0; size2--) {
          java.lang.Double e2 = (ga2 != null ? ga2.peek() : null);
          e2 = in.readDouble();
          a2.add(e2);
        }
      }

      long size3 = in.readArrayStart();
      java.util.List<java.lang.Double> a3 = this.duration;
      if (a3 == null) {
        a3 = new SpecificData.Array<java.lang.Double>((int)size3, SCHEMA$.getField("duration").schema());
        this.duration = a3;
      } else a3.clear();
      SpecificData.Array<java.lang.Double> ga3 = (a3 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Double>)a3 : null);
      for ( ; 0 < size3; size3 = in.arrayNext()) {
        for ( ; size3 != 0; size3--) {
          java.lang.Double e3 = (ga3 != null ? ga3.peek() : null);
          e3 = in.readDouble();
          a3.add(e3);
        }
      }

      long size4 = in.readArrayStart();
      java.util.List<java.lang.Double> a4 = this.end_of_fade_in;
      if (a4 == null) {
        a4 = new SpecificData.Array<java.lang.Double>((int)size4, SCHEMA$.getField("end_of_fade_in").schema());
        this.end_of_fade_in = a4;
      } else a4.clear();
      SpecificData.Array<java.lang.Double> ga4 = (a4 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Double>)a4 : null);
      for ( ; 0 < size4; size4 = in.arrayNext()) {
        for ( ; size4 != 0; size4--) {
          java.lang.Double e4 = (ga4 != null ? ga4.peek() : null);
          e4 = in.readDouble();
          a4.add(e4);
        }
      }

      long size5 = in.readArrayStart();
      java.util.List<java.lang.Double> a5 = this.energy;
      if (a5 == null) {
        a5 = new SpecificData.Array<java.lang.Double>((int)size5, SCHEMA$.getField("energy").schema());
        this.energy = a5;
      } else a5.clear();
      SpecificData.Array<java.lang.Double> ga5 = (a5 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Double>)a5 : null);
      for ( ; 0 < size5; size5 = in.arrayNext()) {
        for ( ; size5 != 0; size5--) {
          java.lang.Double e5 = (ga5 != null ? ga5.peek() : null);
          e5 = in.readDouble();
          a5.add(e5);
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.idx_bars_confidence = null;
      } else {
        long size6 = in.readArrayStart();
        java.util.List<java.lang.Integer> a6 = this.idx_bars_confidence;
        if (a6 == null) {
          a6 = new SpecificData.Array<java.lang.Integer>((int)size6, SCHEMA$.getField("idx_bars_confidence").schema().getTypes().get(1));
          this.idx_bars_confidence = a6;
        } else a6.clear();
        SpecificData.Array<java.lang.Integer> ga6 = (a6 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a6 : null);
        for ( ; 0 < size6; size6 = in.arrayNext()) {
          for ( ; size6 != 0; size6--) {
            java.lang.Integer e6 = (ga6 != null ? ga6.peek() : null);
            e6 = in.readInt();
            a6.add(e6);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.idx_bars_start = null;
      } else {
        long size7 = in.readArrayStart();
        java.util.List<java.lang.Integer> a7 = this.idx_bars_start;
        if (a7 == null) {
          a7 = new SpecificData.Array<java.lang.Integer>((int)size7, SCHEMA$.getField("idx_bars_start").schema().getTypes().get(1));
          this.idx_bars_start = a7;
        } else a7.clear();
        SpecificData.Array<java.lang.Integer> ga7 = (a7 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a7 : null);
        for ( ; 0 < size7; size7 = in.arrayNext()) {
          for ( ; size7 != 0; size7--) {
            java.lang.Integer e7 = (ga7 != null ? ga7.peek() : null);
            e7 = in.readInt();
            a7.add(e7);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.idx_beats_confidence = null;
      } else {
        long size8 = in.readArrayStart();
        java.util.List<java.lang.Integer> a8 = this.idx_beats_confidence;
        if (a8 == null) {
          a8 = new SpecificData.Array<java.lang.Integer>((int)size8, SCHEMA$.getField("idx_beats_confidence").schema().getTypes().get(1));
          this.idx_beats_confidence = a8;
        } else a8.clear();
        SpecificData.Array<java.lang.Integer> ga8 = (a8 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a8 : null);
        for ( ; 0 < size8; size8 = in.arrayNext()) {
          for ( ; size8 != 0; size8--) {
            java.lang.Integer e8 = (ga8 != null ? ga8.peek() : null);
            e8 = in.readInt();
            a8.add(e8);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.idx_beats_start = null;
      } else {
        long size9 = in.readArrayStart();
        java.util.List<java.lang.Integer> a9 = this.idx_beats_start;
        if (a9 == null) {
          a9 = new SpecificData.Array<java.lang.Integer>((int)size9, SCHEMA$.getField("idx_beats_start").schema().getTypes().get(1));
          this.idx_beats_start = a9;
        } else a9.clear();
        SpecificData.Array<java.lang.Integer> ga9 = (a9 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a9 : null);
        for ( ; 0 < size9; size9 = in.arrayNext()) {
          for ( ; size9 != 0; size9--) {
            java.lang.Integer e9 = (ga9 != null ? ga9.peek() : null);
            e9 = in.readInt();
            a9.add(e9);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.idx_sections_confidence = null;
      } else {
        long size10 = in.readArrayStart();
        java.util.List<java.lang.Integer> a10 = this.idx_sections_confidence;
        if (a10 == null) {
          a10 = new SpecificData.Array<java.lang.Integer>((int)size10, SCHEMA$.getField("idx_sections_confidence").schema().getTypes().get(1));
          this.idx_sections_confidence = a10;
        } else a10.clear();
        SpecificData.Array<java.lang.Integer> ga10 = (a10 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a10 : null);
        for ( ; 0 < size10; size10 = in.arrayNext()) {
          for ( ; size10 != 0; size10--) {
            java.lang.Integer e10 = (ga10 != null ? ga10.peek() : null);
            e10 = in.readInt();
            a10.add(e10);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.idx_sections_start = null;
      } else {
        long size11 = in.readArrayStart();
        java.util.List<java.lang.Integer> a11 = this.idx_sections_start;
        if (a11 == null) {
          a11 = new SpecificData.Array<java.lang.Integer>((int)size11, SCHEMA$.getField("idx_sections_start").schema().getTypes().get(1));
          this.idx_sections_start = a11;
        } else a11.clear();
        SpecificData.Array<java.lang.Integer> ga11 = (a11 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a11 : null);
        for ( ; 0 < size11; size11 = in.arrayNext()) {
          for ( ; size11 != 0; size11--) {
            java.lang.Integer e11 = (ga11 != null ? ga11.peek() : null);
            e11 = in.readInt();
            a11.add(e11);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.idx_segments_confidence = null;
      } else {
        long size12 = in.readArrayStart();
        java.util.List<java.lang.Integer> a12 = this.idx_segments_confidence;
        if (a12 == null) {
          a12 = new SpecificData.Array<java.lang.Integer>((int)size12, SCHEMA$.getField("idx_segments_confidence").schema().getTypes().get(1));
          this.idx_segments_confidence = a12;
        } else a12.clear();
        SpecificData.Array<java.lang.Integer> ga12 = (a12 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a12 : null);
        for ( ; 0 < size12; size12 = in.arrayNext()) {
          for ( ; size12 != 0; size12--) {
            java.lang.Integer e12 = (ga12 != null ? ga12.peek() : null);
            e12 = in.readInt();
            a12.add(e12);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.idx_segments_loudness_max = null;
      } else {
        long size13 = in.readArrayStart();
        java.util.List<java.lang.Integer> a13 = this.idx_segments_loudness_max;
        if (a13 == null) {
          a13 = new SpecificData.Array<java.lang.Integer>((int)size13, SCHEMA$.getField("idx_segments_loudness_max").schema().getTypes().get(1));
          this.idx_segments_loudness_max = a13;
        } else a13.clear();
        SpecificData.Array<java.lang.Integer> ga13 = (a13 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a13 : null);
        for ( ; 0 < size13; size13 = in.arrayNext()) {
          for ( ; size13 != 0; size13--) {
            java.lang.Integer e13 = (ga13 != null ? ga13.peek() : null);
            e13 = in.readInt();
            a13.add(e13);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.idx_segments_loudness_max_time = null;
      } else {
        long size14 = in.readArrayStart();
        java.util.List<java.lang.Integer> a14 = this.idx_segments_loudness_max_time;
        if (a14 == null) {
          a14 = new SpecificData.Array<java.lang.Integer>((int)size14, SCHEMA$.getField("idx_segments_loudness_max_time").schema().getTypes().get(1));
          this.idx_segments_loudness_max_time = a14;
        } else a14.clear();
        SpecificData.Array<java.lang.Integer> ga14 = (a14 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a14 : null);
        for ( ; 0 < size14; size14 = in.arrayNext()) {
          for ( ; size14 != 0; size14--) {
            java.lang.Integer e14 = (ga14 != null ? ga14.peek() : null);
            e14 = in.readInt();
            a14.add(e14);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.idx_segments_loudness_start = null;
      } else {
        long size15 = in.readArrayStart();
        java.util.List<java.lang.Integer> a15 = this.idx_segments_loudness_start;
        if (a15 == null) {
          a15 = new SpecificData.Array<java.lang.Integer>((int)size15, SCHEMA$.getField("idx_segments_loudness_start").schema().getTypes().get(1));
          this.idx_segments_loudness_start = a15;
        } else a15.clear();
        SpecificData.Array<java.lang.Integer> ga15 = (a15 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a15 : null);
        for ( ; 0 < size15; size15 = in.arrayNext()) {
          for ( ; size15 != 0; size15--) {
            java.lang.Integer e15 = (ga15 != null ? ga15.peek() : null);
            e15 = in.readInt();
            a15.add(e15);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.idx_segments_pitches = null;
      } else {
        long size16 = in.readArrayStart();
        java.util.List<java.lang.Integer> a16 = this.idx_segments_pitches;
        if (a16 == null) {
          a16 = new SpecificData.Array<java.lang.Integer>((int)size16, SCHEMA$.getField("idx_segments_pitches").schema().getTypes().get(1));
          this.idx_segments_pitches = a16;
        } else a16.clear();
        SpecificData.Array<java.lang.Integer> ga16 = (a16 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a16 : null);
        for ( ; 0 < size16; size16 = in.arrayNext()) {
          for ( ; size16 != 0; size16--) {
            java.lang.Integer e16 = (ga16 != null ? ga16.peek() : null);
            e16 = in.readInt();
            a16.add(e16);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.idx_segments_start = null;
      } else {
        long size17 = in.readArrayStart();
        java.util.List<java.lang.Integer> a17 = this.idx_segments_start;
        if (a17 == null) {
          a17 = new SpecificData.Array<java.lang.Integer>((int)size17, SCHEMA$.getField("idx_segments_start").schema().getTypes().get(1));
          this.idx_segments_start = a17;
        } else a17.clear();
        SpecificData.Array<java.lang.Integer> ga17 = (a17 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a17 : null);
        for ( ; 0 < size17; size17 = in.arrayNext()) {
          for ( ; size17 != 0; size17--) {
            java.lang.Integer e17 = (ga17 != null ? ga17.peek() : null);
            e17 = in.readInt();
            a17.add(e17);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.idx_segments_timbre = null;
      } else {
        long size18 = in.readArrayStart();
        java.util.List<java.lang.Integer> a18 = this.idx_segments_timbre;
        if (a18 == null) {
          a18 = new SpecificData.Array<java.lang.Integer>((int)size18, SCHEMA$.getField("idx_segments_timbre").schema().getTypes().get(1));
          this.idx_segments_timbre = a18;
        } else a18.clear();
        SpecificData.Array<java.lang.Integer> ga18 = (a18 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a18 : null);
        for ( ; 0 < size18; size18 = in.arrayNext()) {
          for ( ; size18 != 0; size18--) {
            java.lang.Integer e18 = (ga18 != null ? ga18.peek() : null);
            e18 = in.readInt();
            a18.add(e18);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.idx_tatums_confidence = null;
      } else {
        long size19 = in.readArrayStart();
        java.util.List<java.lang.Integer> a19 = this.idx_tatums_confidence;
        if (a19 == null) {
          a19 = new SpecificData.Array<java.lang.Integer>((int)size19, SCHEMA$.getField("idx_tatums_confidence").schema().getTypes().get(1));
          this.idx_tatums_confidence = a19;
        } else a19.clear();
        SpecificData.Array<java.lang.Integer> ga19 = (a19 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a19 : null);
        for ( ; 0 < size19; size19 = in.arrayNext()) {
          for ( ; size19 != 0; size19--) {
            java.lang.Integer e19 = (ga19 != null ? ga19.peek() : null);
            e19 = in.readInt();
            a19.add(e19);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.idx_tatums_start = null;
      } else {
        long size20 = in.readArrayStart();
        java.util.List<java.lang.Integer> a20 = this.idx_tatums_start;
        if (a20 == null) {
          a20 = new SpecificData.Array<java.lang.Integer>((int)size20, SCHEMA$.getField("idx_tatums_start").schema().getTypes().get(1));
          this.idx_tatums_start = a20;
        } else a20.clear();
        SpecificData.Array<java.lang.Integer> ga20 = (a20 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a20 : null);
        for ( ; 0 < size20; size20 = in.arrayNext()) {
          for ( ; size20 != 0; size20--) {
            java.lang.Integer e20 = (ga20 != null ? ga20.peek() : null);
            e20 = in.readInt();
            a20.add(e20);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.key = null;
      } else {
        long size21 = in.readArrayStart();
        java.util.List<java.lang.Integer> a21 = this.key;
        if (a21 == null) {
          a21 = new SpecificData.Array<java.lang.Integer>((int)size21, SCHEMA$.getField("key").schema().getTypes().get(1));
          this.key = a21;
        } else a21.clear();
        SpecificData.Array<java.lang.Integer> ga21 = (a21 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a21 : null);
        for ( ; 0 < size21; size21 = in.arrayNext()) {
          for ( ; size21 != 0; size21--) {
            java.lang.Integer e21 = (ga21 != null ? ga21.peek() : null);
            e21 = in.readInt();
            a21.add(e21);
          }
        }
      }

      long size22 = in.readArrayStart();
      java.util.List<java.lang.Double> a22 = this.key_confidence;
      if (a22 == null) {
        a22 = new SpecificData.Array<java.lang.Double>((int)size22, SCHEMA$.getField("key_confidence").schema());
        this.key_confidence = a22;
      } else a22.clear();
      SpecificData.Array<java.lang.Double> ga22 = (a22 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Double>)a22 : null);
      for ( ; 0 < size22; size22 = in.arrayNext()) {
        for ( ; size22 != 0; size22--) {
          java.lang.Double e22 = (ga22 != null ? ga22.peek() : null);
          e22 = in.readDouble();
          a22.add(e22);
        }
      }

      long size23 = in.readArrayStart();
      java.util.List<java.lang.Double> a23 = this.loudness;
      if (a23 == null) {
        a23 = new SpecificData.Array<java.lang.Double>((int)size23, SCHEMA$.getField("loudness").schema());
        this.loudness = a23;
      } else a23.clear();
      SpecificData.Array<java.lang.Double> ga23 = (a23 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Double>)a23 : null);
      for ( ; 0 < size23; size23 = in.arrayNext()) {
        for ( ; size23 != 0; size23--) {
          java.lang.Double e23 = (ga23 != null ? ga23.peek() : null);
          e23 = in.readDouble();
          a23.add(e23);
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.mode = null;
      } else {
        long size24 = in.readArrayStart();
        java.util.List<java.lang.Integer> a24 = this.mode;
        if (a24 == null) {
          a24 = new SpecificData.Array<java.lang.Integer>((int)size24, SCHEMA$.getField("mode").schema().getTypes().get(1));
          this.mode = a24;
        } else a24.clear();
        SpecificData.Array<java.lang.Integer> ga24 = (a24 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a24 : null);
        for ( ; 0 < size24; size24 = in.arrayNext()) {
          for ( ; size24 != 0; size24--) {
            java.lang.Integer e24 = (ga24 != null ? ga24.peek() : null);
            e24 = in.readInt();
            a24.add(e24);
          }
        }
      }

      long size25 = in.readArrayStart();
      java.util.List<java.lang.Double> a25 = this.mode_confidence;
      if (a25 == null) {
        a25 = new SpecificData.Array<java.lang.Double>((int)size25, SCHEMA$.getField("mode_confidence").schema());
        this.mode_confidence = a25;
      } else a25.clear();
      SpecificData.Array<java.lang.Double> ga25 = (a25 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Double>)a25 : null);
      for ( ; 0 < size25; size25 = in.arrayNext()) {
        for ( ; size25 != 0; size25--) {
          java.lang.Double e25 = (ga25 != null ? ga25.peek() : null);
          e25 = in.readDouble();
          a25.add(e25);
        }
      }

      long size26 = in.readArrayStart();
      java.util.List<java.lang.Double> a26 = this.start_of_fade_out;
      if (a26 == null) {
        a26 = new SpecificData.Array<java.lang.Double>((int)size26, SCHEMA$.getField("start_of_fade_out").schema());
        this.start_of_fade_out = a26;
      } else a26.clear();
      SpecificData.Array<java.lang.Double> ga26 = (a26 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Double>)a26 : null);
      for ( ; 0 < size26; size26 = in.arrayNext()) {
        for ( ; size26 != 0; size26--) {
          java.lang.Double e26 = (ga26 != null ? ga26.peek() : null);
          e26 = in.readDouble();
          a26.add(e26);
        }
      }

      long size27 = in.readArrayStart();
      java.util.List<java.lang.Double> a27 = this.tempo;
      if (a27 == null) {
        a27 = new SpecificData.Array<java.lang.Double>((int)size27, SCHEMA$.getField("tempo").schema());
        this.tempo = a27;
      } else a27.clear();
      SpecificData.Array<java.lang.Double> ga27 = (a27 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Double>)a27 : null);
      for ( ; 0 < size27; size27 = in.arrayNext()) {
        for ( ; size27 != 0; size27--) {
          java.lang.Double e27 = (ga27 != null ? ga27.peek() : null);
          e27 = in.readDouble();
          a27.add(e27);
        }
      }

      long size28 = in.readArrayStart();
      java.util.List<java.lang.Integer> a28 = this.time_signature;
      if (a28 == null) {
        a28 = new SpecificData.Array<java.lang.Integer>((int)size28, SCHEMA$.getField("time_signature").schema());
        this.time_signature = a28;
      } else a28.clear();
      SpecificData.Array<java.lang.Integer> ga28 = (a28 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a28 : null);
      for ( ; 0 < size28; size28 = in.arrayNext()) {
        for ( ; size28 != 0; size28--) {
          java.lang.Integer e28 = (ga28 != null ? ga28.peek() : null);
          e28 = in.readInt();
          a28.add(e28);
        }
      }

      long size29 = in.readArrayStart();
      java.util.List<java.lang.Double> a29 = this.time_signature_confidence;
      if (a29 == null) {
        a29 = new SpecificData.Array<java.lang.Double>((int)size29, SCHEMA$.getField("time_signature_confidence").schema());
        this.time_signature_confidence = a29;
      } else a29.clear();
      SpecificData.Array<java.lang.Double> ga29 = (a29 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Double>)a29 : null);
      for ( ; 0 < size29; size29 = in.arrayNext()) {
        for ( ; size29 != 0; size29--) {
          java.lang.Double e29 = (ga29 != null ? ga29.peek() : null);
          e29 = in.readDouble();
          a29.add(e29);
        }
      }

      long size30 = in.readArrayStart();
      java.util.List<java.lang.CharSequence> a30 = this.track_id;
      if (a30 == null) {
        a30 = new SpecificData.Array<java.lang.CharSequence>((int)size30, SCHEMA$.getField("track_id").schema());
        this.track_id = a30;
      } else a30.clear();
      SpecificData.Array<java.lang.CharSequence> ga30 = (a30 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a30 : null);
      for ( ; 0 < size30; size30 = in.arrayNext()) {
        for ( ; size30 != 0; size30--) {
          java.lang.CharSequence e30 = (ga30 != null ? ga30.peek() : null);
          e30 = in.readString(e30 instanceof Utf8 ? (Utf8)e30 : null);
          a30.add(e30);
        }
      }

    } else {
      for (int i = 0; i < 31; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.analysis_sample_rate = null;
          } else {
            long size0 = in.readArrayStart();
            java.util.List<java.lang.Integer> a0 = this.analysis_sample_rate;
            if (a0 == null) {
              a0 = new SpecificData.Array<java.lang.Integer>((int)size0, SCHEMA$.getField("analysis_sample_rate").schema().getTypes().get(1));
              this.analysis_sample_rate = a0;
            } else a0.clear();
            SpecificData.Array<java.lang.Integer> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a0 : null);
            for ( ; 0 < size0; size0 = in.arrayNext()) {
              for ( ; size0 != 0; size0--) {
                java.lang.Integer e0 = (ga0 != null ? ga0.peek() : null);
                e0 = in.readInt();
                a0.add(e0);
              }
            }
          }
          break;

        case 1:
          long size1 = in.readArrayStart();
          java.util.List<java.lang.CharSequence> a1 = this.audio_md5;
          if (a1 == null) {
            a1 = new SpecificData.Array<java.lang.CharSequence>((int)size1, SCHEMA$.getField("audio_md5").schema());
            this.audio_md5 = a1;
          } else a1.clear();
          SpecificData.Array<java.lang.CharSequence> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a1 : null);
          for ( ; 0 < size1; size1 = in.arrayNext()) {
            for ( ; size1 != 0; size1--) {
              java.lang.CharSequence e1 = (ga1 != null ? ga1.peek() : null);
              e1 = in.readString(e1 instanceof Utf8 ? (Utf8)e1 : null);
              a1.add(e1);
            }
          }
          break;

        case 2:
          long size2 = in.readArrayStart();
          java.util.List<java.lang.Double> a2 = this.danceability;
          if (a2 == null) {
            a2 = new SpecificData.Array<java.lang.Double>((int)size2, SCHEMA$.getField("danceability").schema());
            this.danceability = a2;
          } else a2.clear();
          SpecificData.Array<java.lang.Double> ga2 = (a2 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Double>)a2 : null);
          for ( ; 0 < size2; size2 = in.arrayNext()) {
            for ( ; size2 != 0; size2--) {
              java.lang.Double e2 = (ga2 != null ? ga2.peek() : null);
              e2 = in.readDouble();
              a2.add(e2);
            }
          }
          break;

        case 3:
          long size3 = in.readArrayStart();
          java.util.List<java.lang.Double> a3 = this.duration;
          if (a3 == null) {
            a3 = new SpecificData.Array<java.lang.Double>((int)size3, SCHEMA$.getField("duration").schema());
            this.duration = a3;
          } else a3.clear();
          SpecificData.Array<java.lang.Double> ga3 = (a3 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Double>)a3 : null);
          for ( ; 0 < size3; size3 = in.arrayNext()) {
            for ( ; size3 != 0; size3--) {
              java.lang.Double e3 = (ga3 != null ? ga3.peek() : null);
              e3 = in.readDouble();
              a3.add(e3);
            }
          }
          break;

        case 4:
          long size4 = in.readArrayStart();
          java.util.List<java.lang.Double> a4 = this.end_of_fade_in;
          if (a4 == null) {
            a4 = new SpecificData.Array<java.lang.Double>((int)size4, SCHEMA$.getField("end_of_fade_in").schema());
            this.end_of_fade_in = a4;
          } else a4.clear();
          SpecificData.Array<java.lang.Double> ga4 = (a4 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Double>)a4 : null);
          for ( ; 0 < size4; size4 = in.arrayNext()) {
            for ( ; size4 != 0; size4--) {
              java.lang.Double e4 = (ga4 != null ? ga4.peek() : null);
              e4 = in.readDouble();
              a4.add(e4);
            }
          }
          break;

        case 5:
          long size5 = in.readArrayStart();
          java.util.List<java.lang.Double> a5 = this.energy;
          if (a5 == null) {
            a5 = new SpecificData.Array<java.lang.Double>((int)size5, SCHEMA$.getField("energy").schema());
            this.energy = a5;
          } else a5.clear();
          SpecificData.Array<java.lang.Double> ga5 = (a5 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Double>)a5 : null);
          for ( ; 0 < size5; size5 = in.arrayNext()) {
            for ( ; size5 != 0; size5--) {
              java.lang.Double e5 = (ga5 != null ? ga5.peek() : null);
              e5 = in.readDouble();
              a5.add(e5);
            }
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.idx_bars_confidence = null;
          } else {
            long size6 = in.readArrayStart();
            java.util.List<java.lang.Integer> a6 = this.idx_bars_confidence;
            if (a6 == null) {
              a6 = new SpecificData.Array<java.lang.Integer>((int)size6, SCHEMA$.getField("idx_bars_confidence").schema().getTypes().get(1));
              this.idx_bars_confidence = a6;
            } else a6.clear();
            SpecificData.Array<java.lang.Integer> ga6 = (a6 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a6 : null);
            for ( ; 0 < size6; size6 = in.arrayNext()) {
              for ( ; size6 != 0; size6--) {
                java.lang.Integer e6 = (ga6 != null ? ga6.peek() : null);
                e6 = in.readInt();
                a6.add(e6);
              }
            }
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.idx_bars_start = null;
          } else {
            long size7 = in.readArrayStart();
            java.util.List<java.lang.Integer> a7 = this.idx_bars_start;
            if (a7 == null) {
              a7 = new SpecificData.Array<java.lang.Integer>((int)size7, SCHEMA$.getField("idx_bars_start").schema().getTypes().get(1));
              this.idx_bars_start = a7;
            } else a7.clear();
            SpecificData.Array<java.lang.Integer> ga7 = (a7 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a7 : null);
            for ( ; 0 < size7; size7 = in.arrayNext()) {
              for ( ; size7 != 0; size7--) {
                java.lang.Integer e7 = (ga7 != null ? ga7.peek() : null);
                e7 = in.readInt();
                a7.add(e7);
              }
            }
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.idx_beats_confidence = null;
          } else {
            long size8 = in.readArrayStart();
            java.util.List<java.lang.Integer> a8 = this.idx_beats_confidence;
            if (a8 == null) {
              a8 = new SpecificData.Array<java.lang.Integer>((int)size8, SCHEMA$.getField("idx_beats_confidence").schema().getTypes().get(1));
              this.idx_beats_confidence = a8;
            } else a8.clear();
            SpecificData.Array<java.lang.Integer> ga8 = (a8 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a8 : null);
            for ( ; 0 < size8; size8 = in.arrayNext()) {
              for ( ; size8 != 0; size8--) {
                java.lang.Integer e8 = (ga8 != null ? ga8.peek() : null);
                e8 = in.readInt();
                a8.add(e8);
              }
            }
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.idx_beats_start = null;
          } else {
            long size9 = in.readArrayStart();
            java.util.List<java.lang.Integer> a9 = this.idx_beats_start;
            if (a9 == null) {
              a9 = new SpecificData.Array<java.lang.Integer>((int)size9, SCHEMA$.getField("idx_beats_start").schema().getTypes().get(1));
              this.idx_beats_start = a9;
            } else a9.clear();
            SpecificData.Array<java.lang.Integer> ga9 = (a9 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a9 : null);
            for ( ; 0 < size9; size9 = in.arrayNext()) {
              for ( ; size9 != 0; size9--) {
                java.lang.Integer e9 = (ga9 != null ? ga9.peek() : null);
                e9 = in.readInt();
                a9.add(e9);
              }
            }
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.idx_sections_confidence = null;
          } else {
            long size10 = in.readArrayStart();
            java.util.List<java.lang.Integer> a10 = this.idx_sections_confidence;
            if (a10 == null) {
              a10 = new SpecificData.Array<java.lang.Integer>((int)size10, SCHEMA$.getField("idx_sections_confidence").schema().getTypes().get(1));
              this.idx_sections_confidence = a10;
            } else a10.clear();
            SpecificData.Array<java.lang.Integer> ga10 = (a10 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a10 : null);
            for ( ; 0 < size10; size10 = in.arrayNext()) {
              for ( ; size10 != 0; size10--) {
                java.lang.Integer e10 = (ga10 != null ? ga10.peek() : null);
                e10 = in.readInt();
                a10.add(e10);
              }
            }
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.idx_sections_start = null;
          } else {
            long size11 = in.readArrayStart();
            java.util.List<java.lang.Integer> a11 = this.idx_sections_start;
            if (a11 == null) {
              a11 = new SpecificData.Array<java.lang.Integer>((int)size11, SCHEMA$.getField("idx_sections_start").schema().getTypes().get(1));
              this.idx_sections_start = a11;
            } else a11.clear();
            SpecificData.Array<java.lang.Integer> ga11 = (a11 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a11 : null);
            for ( ; 0 < size11; size11 = in.arrayNext()) {
              for ( ; size11 != 0; size11--) {
                java.lang.Integer e11 = (ga11 != null ? ga11.peek() : null);
                e11 = in.readInt();
                a11.add(e11);
              }
            }
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.idx_segments_confidence = null;
          } else {
            long size12 = in.readArrayStart();
            java.util.List<java.lang.Integer> a12 = this.idx_segments_confidence;
            if (a12 == null) {
              a12 = new SpecificData.Array<java.lang.Integer>((int)size12, SCHEMA$.getField("idx_segments_confidence").schema().getTypes().get(1));
              this.idx_segments_confidence = a12;
            } else a12.clear();
            SpecificData.Array<java.lang.Integer> ga12 = (a12 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a12 : null);
            for ( ; 0 < size12; size12 = in.arrayNext()) {
              for ( ; size12 != 0; size12--) {
                java.lang.Integer e12 = (ga12 != null ? ga12.peek() : null);
                e12 = in.readInt();
                a12.add(e12);
              }
            }
          }
          break;

        case 13:
          if (in.readIndex() != 1) {
            in.readNull();
            this.idx_segments_loudness_max = null;
          } else {
            long size13 = in.readArrayStart();
            java.util.List<java.lang.Integer> a13 = this.idx_segments_loudness_max;
            if (a13 == null) {
              a13 = new SpecificData.Array<java.lang.Integer>((int)size13, SCHEMA$.getField("idx_segments_loudness_max").schema().getTypes().get(1));
              this.idx_segments_loudness_max = a13;
            } else a13.clear();
            SpecificData.Array<java.lang.Integer> ga13 = (a13 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a13 : null);
            for ( ; 0 < size13; size13 = in.arrayNext()) {
              for ( ; size13 != 0; size13--) {
                java.lang.Integer e13 = (ga13 != null ? ga13.peek() : null);
                e13 = in.readInt();
                a13.add(e13);
              }
            }
          }
          break;

        case 14:
          if (in.readIndex() != 1) {
            in.readNull();
            this.idx_segments_loudness_max_time = null;
          } else {
            long size14 = in.readArrayStart();
            java.util.List<java.lang.Integer> a14 = this.idx_segments_loudness_max_time;
            if (a14 == null) {
              a14 = new SpecificData.Array<java.lang.Integer>((int)size14, SCHEMA$.getField("idx_segments_loudness_max_time").schema().getTypes().get(1));
              this.idx_segments_loudness_max_time = a14;
            } else a14.clear();
            SpecificData.Array<java.lang.Integer> ga14 = (a14 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a14 : null);
            for ( ; 0 < size14; size14 = in.arrayNext()) {
              for ( ; size14 != 0; size14--) {
                java.lang.Integer e14 = (ga14 != null ? ga14.peek() : null);
                e14 = in.readInt();
                a14.add(e14);
              }
            }
          }
          break;

        case 15:
          if (in.readIndex() != 1) {
            in.readNull();
            this.idx_segments_loudness_start = null;
          } else {
            long size15 = in.readArrayStart();
            java.util.List<java.lang.Integer> a15 = this.idx_segments_loudness_start;
            if (a15 == null) {
              a15 = new SpecificData.Array<java.lang.Integer>((int)size15, SCHEMA$.getField("idx_segments_loudness_start").schema().getTypes().get(1));
              this.idx_segments_loudness_start = a15;
            } else a15.clear();
            SpecificData.Array<java.lang.Integer> ga15 = (a15 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a15 : null);
            for ( ; 0 < size15; size15 = in.arrayNext()) {
              for ( ; size15 != 0; size15--) {
                java.lang.Integer e15 = (ga15 != null ? ga15.peek() : null);
                e15 = in.readInt();
                a15.add(e15);
              }
            }
          }
          break;

        case 16:
          if (in.readIndex() != 1) {
            in.readNull();
            this.idx_segments_pitches = null;
          } else {
            long size16 = in.readArrayStart();
            java.util.List<java.lang.Integer> a16 = this.idx_segments_pitches;
            if (a16 == null) {
              a16 = new SpecificData.Array<java.lang.Integer>((int)size16, SCHEMA$.getField("idx_segments_pitches").schema().getTypes().get(1));
              this.idx_segments_pitches = a16;
            } else a16.clear();
            SpecificData.Array<java.lang.Integer> ga16 = (a16 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a16 : null);
            for ( ; 0 < size16; size16 = in.arrayNext()) {
              for ( ; size16 != 0; size16--) {
                java.lang.Integer e16 = (ga16 != null ? ga16.peek() : null);
                e16 = in.readInt();
                a16.add(e16);
              }
            }
          }
          break;

        case 17:
          if (in.readIndex() != 1) {
            in.readNull();
            this.idx_segments_start = null;
          } else {
            long size17 = in.readArrayStart();
            java.util.List<java.lang.Integer> a17 = this.idx_segments_start;
            if (a17 == null) {
              a17 = new SpecificData.Array<java.lang.Integer>((int)size17, SCHEMA$.getField("idx_segments_start").schema().getTypes().get(1));
              this.idx_segments_start = a17;
            } else a17.clear();
            SpecificData.Array<java.lang.Integer> ga17 = (a17 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a17 : null);
            for ( ; 0 < size17; size17 = in.arrayNext()) {
              for ( ; size17 != 0; size17--) {
                java.lang.Integer e17 = (ga17 != null ? ga17.peek() : null);
                e17 = in.readInt();
                a17.add(e17);
              }
            }
          }
          break;

        case 18:
          if (in.readIndex() != 1) {
            in.readNull();
            this.idx_segments_timbre = null;
          } else {
            long size18 = in.readArrayStart();
            java.util.List<java.lang.Integer> a18 = this.idx_segments_timbre;
            if (a18 == null) {
              a18 = new SpecificData.Array<java.lang.Integer>((int)size18, SCHEMA$.getField("idx_segments_timbre").schema().getTypes().get(1));
              this.idx_segments_timbre = a18;
            } else a18.clear();
            SpecificData.Array<java.lang.Integer> ga18 = (a18 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a18 : null);
            for ( ; 0 < size18; size18 = in.arrayNext()) {
              for ( ; size18 != 0; size18--) {
                java.lang.Integer e18 = (ga18 != null ? ga18.peek() : null);
                e18 = in.readInt();
                a18.add(e18);
              }
            }
          }
          break;

        case 19:
          if (in.readIndex() != 1) {
            in.readNull();
            this.idx_tatums_confidence = null;
          } else {
            long size19 = in.readArrayStart();
            java.util.List<java.lang.Integer> a19 = this.idx_tatums_confidence;
            if (a19 == null) {
              a19 = new SpecificData.Array<java.lang.Integer>((int)size19, SCHEMA$.getField("idx_tatums_confidence").schema().getTypes().get(1));
              this.idx_tatums_confidence = a19;
            } else a19.clear();
            SpecificData.Array<java.lang.Integer> ga19 = (a19 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a19 : null);
            for ( ; 0 < size19; size19 = in.arrayNext()) {
              for ( ; size19 != 0; size19--) {
                java.lang.Integer e19 = (ga19 != null ? ga19.peek() : null);
                e19 = in.readInt();
                a19.add(e19);
              }
            }
          }
          break;

        case 20:
          if (in.readIndex() != 1) {
            in.readNull();
            this.idx_tatums_start = null;
          } else {
            long size20 = in.readArrayStart();
            java.util.List<java.lang.Integer> a20 = this.idx_tatums_start;
            if (a20 == null) {
              a20 = new SpecificData.Array<java.lang.Integer>((int)size20, SCHEMA$.getField("idx_tatums_start").schema().getTypes().get(1));
              this.idx_tatums_start = a20;
            } else a20.clear();
            SpecificData.Array<java.lang.Integer> ga20 = (a20 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a20 : null);
            for ( ; 0 < size20; size20 = in.arrayNext()) {
              for ( ; size20 != 0; size20--) {
                java.lang.Integer e20 = (ga20 != null ? ga20.peek() : null);
                e20 = in.readInt();
                a20.add(e20);
              }
            }
          }
          break;

        case 21:
          if (in.readIndex() != 1) {
            in.readNull();
            this.key = null;
          } else {
            long size21 = in.readArrayStart();
            java.util.List<java.lang.Integer> a21 = this.key;
            if (a21 == null) {
              a21 = new SpecificData.Array<java.lang.Integer>((int)size21, SCHEMA$.getField("key").schema().getTypes().get(1));
              this.key = a21;
            } else a21.clear();
            SpecificData.Array<java.lang.Integer> ga21 = (a21 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a21 : null);
            for ( ; 0 < size21; size21 = in.arrayNext()) {
              for ( ; size21 != 0; size21--) {
                java.lang.Integer e21 = (ga21 != null ? ga21.peek() : null);
                e21 = in.readInt();
                a21.add(e21);
              }
            }
          }
          break;

        case 22:
          long size22 = in.readArrayStart();
          java.util.List<java.lang.Double> a22 = this.key_confidence;
          if (a22 == null) {
            a22 = new SpecificData.Array<java.lang.Double>((int)size22, SCHEMA$.getField("key_confidence").schema());
            this.key_confidence = a22;
          } else a22.clear();
          SpecificData.Array<java.lang.Double> ga22 = (a22 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Double>)a22 : null);
          for ( ; 0 < size22; size22 = in.arrayNext()) {
            for ( ; size22 != 0; size22--) {
              java.lang.Double e22 = (ga22 != null ? ga22.peek() : null);
              e22 = in.readDouble();
              a22.add(e22);
            }
          }
          break;

        case 23:
          long size23 = in.readArrayStart();
          java.util.List<java.lang.Double> a23 = this.loudness;
          if (a23 == null) {
            a23 = new SpecificData.Array<java.lang.Double>((int)size23, SCHEMA$.getField("loudness").schema());
            this.loudness = a23;
          } else a23.clear();
          SpecificData.Array<java.lang.Double> ga23 = (a23 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Double>)a23 : null);
          for ( ; 0 < size23; size23 = in.arrayNext()) {
            for ( ; size23 != 0; size23--) {
              java.lang.Double e23 = (ga23 != null ? ga23.peek() : null);
              e23 = in.readDouble();
              a23.add(e23);
            }
          }
          break;

        case 24:
          if (in.readIndex() != 1) {
            in.readNull();
            this.mode = null;
          } else {
            long size24 = in.readArrayStart();
            java.util.List<java.lang.Integer> a24 = this.mode;
            if (a24 == null) {
              a24 = new SpecificData.Array<java.lang.Integer>((int)size24, SCHEMA$.getField("mode").schema().getTypes().get(1));
              this.mode = a24;
            } else a24.clear();
            SpecificData.Array<java.lang.Integer> ga24 = (a24 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a24 : null);
            for ( ; 0 < size24; size24 = in.arrayNext()) {
              for ( ; size24 != 0; size24--) {
                java.lang.Integer e24 = (ga24 != null ? ga24.peek() : null);
                e24 = in.readInt();
                a24.add(e24);
              }
            }
          }
          break;

        case 25:
          long size25 = in.readArrayStart();
          java.util.List<java.lang.Double> a25 = this.mode_confidence;
          if (a25 == null) {
            a25 = new SpecificData.Array<java.lang.Double>((int)size25, SCHEMA$.getField("mode_confidence").schema());
            this.mode_confidence = a25;
          } else a25.clear();
          SpecificData.Array<java.lang.Double> ga25 = (a25 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Double>)a25 : null);
          for ( ; 0 < size25; size25 = in.arrayNext()) {
            for ( ; size25 != 0; size25--) {
              java.lang.Double e25 = (ga25 != null ? ga25.peek() : null);
              e25 = in.readDouble();
              a25.add(e25);
            }
          }
          break;

        case 26:
          long size26 = in.readArrayStart();
          java.util.List<java.lang.Double> a26 = this.start_of_fade_out;
          if (a26 == null) {
            a26 = new SpecificData.Array<java.lang.Double>((int)size26, SCHEMA$.getField("start_of_fade_out").schema());
            this.start_of_fade_out = a26;
          } else a26.clear();
          SpecificData.Array<java.lang.Double> ga26 = (a26 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Double>)a26 : null);
          for ( ; 0 < size26; size26 = in.arrayNext()) {
            for ( ; size26 != 0; size26--) {
              java.lang.Double e26 = (ga26 != null ? ga26.peek() : null);
              e26 = in.readDouble();
              a26.add(e26);
            }
          }
          break;

        case 27:
          long size27 = in.readArrayStart();
          java.util.List<java.lang.Double> a27 = this.tempo;
          if (a27 == null) {
            a27 = new SpecificData.Array<java.lang.Double>((int)size27, SCHEMA$.getField("tempo").schema());
            this.tempo = a27;
          } else a27.clear();
          SpecificData.Array<java.lang.Double> ga27 = (a27 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Double>)a27 : null);
          for ( ; 0 < size27; size27 = in.arrayNext()) {
            for ( ; size27 != 0; size27--) {
              java.lang.Double e27 = (ga27 != null ? ga27.peek() : null);
              e27 = in.readDouble();
              a27.add(e27);
            }
          }
          break;

        case 28:
          long size28 = in.readArrayStart();
          java.util.List<java.lang.Integer> a28 = this.time_signature;
          if (a28 == null) {
            a28 = new SpecificData.Array<java.lang.Integer>((int)size28, SCHEMA$.getField("time_signature").schema());
            this.time_signature = a28;
          } else a28.clear();
          SpecificData.Array<java.lang.Integer> ga28 = (a28 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a28 : null);
          for ( ; 0 < size28; size28 = in.arrayNext()) {
            for ( ; size28 != 0; size28--) {
              java.lang.Integer e28 = (ga28 != null ? ga28.peek() : null);
              e28 = in.readInt();
              a28.add(e28);
            }
          }
          break;

        case 29:
          long size29 = in.readArrayStart();
          java.util.List<java.lang.Double> a29 = this.time_signature_confidence;
          if (a29 == null) {
            a29 = new SpecificData.Array<java.lang.Double>((int)size29, SCHEMA$.getField("time_signature_confidence").schema());
            this.time_signature_confidence = a29;
          } else a29.clear();
          SpecificData.Array<java.lang.Double> ga29 = (a29 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Double>)a29 : null);
          for ( ; 0 < size29; size29 = in.arrayNext()) {
            for ( ; size29 != 0; size29--) {
              java.lang.Double e29 = (ga29 != null ? ga29.peek() : null);
              e29 = in.readDouble();
              a29.add(e29);
            }
          }
          break;

        case 30:
          long size30 = in.readArrayStart();
          java.util.List<java.lang.CharSequence> a30 = this.track_id;
          if (a30 == null) {
            a30 = new SpecificData.Array<java.lang.CharSequence>((int)size30, SCHEMA$.getField("track_id").schema());
            this.track_id = a30;
          } else a30.clear();
          SpecificData.Array<java.lang.CharSequence> ga30 = (a30 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a30 : null);
          for ( ; 0 < size30; size30 = in.arrayNext()) {
            for ( ; size30 != 0; size30--) {
              java.lang.CharSequence e30 = (ga30 != null ? ga30.peek() : null);
              e30 = in.readString(e30 instanceof Utf8 ? (Utf8)e30 : null);
              a30.add(e30);
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










